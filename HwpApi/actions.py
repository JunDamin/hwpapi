# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_api/01_actions.ipynb.

# %% auto 0
__all__ = ['create_action_wrapper']

# %% ../nbs/02_api/01_actions.ipynb 4
# preset action data <Action key>: [<parameter key>, <description>]

_action_info = {
    "AddHanjaWord": [None, "한자단어 등록"],
    "AllReplace": ["FindReplace", "모두 바꾸기"],
    "AQcommandMerge": [
        "UserQCommandFile",
        "입력 자동 명령 파일 저장/로드 \t(한글메뉴의 [도구-빠른 교정-빠른 교정내용]에서 [입력 자동 명령 사용자 사전] 대화상자) \tParameterSet을 직접 조작하여 사용함.",
    ],
    "AutoChangeHangul": [None, "낱자모 우선"],
    "AutoChangeRun": [None, "동작"],
    "AutoSpell Run": [None, "맞춤법 ― 메뉴에서 맞춤법 도우미 동작 On/Off"],
    "Average": ["Sum", "블록 평균"],
    "BackwardFind": ["FindReplace", "뒤로 찾기"],
    "Bookmark": ["BookMark", "책갈피"],
    "BreakColDef": [None, "단 정의 삽입"],
    "BreakColumn": [None, "단 나누기"],
    "BreakLine": [None, "line break"],
    "BreakPage": [None, "쪽 나누기"],
    "BreakPara": [None, "문단 나누기"],
    "BreakSection": [None, "구역 나누기"],
    "Cancel": [None, "ESC"],
    "CaptureDialog": [None, "갈무리 끝"],
    "CaptureHandler": [None, "갈무리 시작"],
    "CellBorder": ["CellBorderFill", "셀 테두리"],
    "CellBorderFill": ["CellBorderFill", "셀 테두리"],
    "CellFill": ["CellBorderFill", "셀 배경"],
    "CellZoneBorder": ["CellBorderFill", "셀 테두리(여러 셀에 걸쳐 적용) \t셀이 선택된 상태에서만 동작"],
    "CellZoneBorderFill": ["CellBorderFill", "셀 테두리(여러 셀에 걸쳐 적용) \t셀이 선택된 상태에서만 동작"],
    "CellZoneFill": ["CellBorderFill", "셀 배경(여러 셀에 걸쳐 적용) \t셀이 선택된 상태에서만 동작"],
    "ChangeRome": [None, "로마자변환"],
    # "ChangeRome String": [None, "로마자변환 - 입력받은 스트링 변환"],
    # "ChangeRome User": [None, "로마자 사용자 데이터"],
    # "ChangeRome User String": [None, "로마자 사용자 데이터 추가"],
    "CharShape": ["CharShape", "글자 모양"],
    "CharShapeBold": [None, "단축키: Alt+L(글자 진하게)"],
    "CharShapeCenterline": [None, "취소선(CenterLine)"],
    "CharShapeDialog": ["CharShape", "글자 모양 대화상자(내부 구현용)"],
    "CharShapeDialogWithoutBorder": ["CharShape", "글자 모양 대화상자(내부 구현용, [글자 테두리] 탭 제외)"],
    "CharShapeEmboss": [None, "양각"],
    "CharShapeEngrave": [None, "음각"],
    "CharShapeHeight": [None, "글자 크기(글자 모양 대화상자에서 Focus이동용으로 사용)"],
    "CharShapeHeightDecrease": [None, "크기 작게 ALT+SHIFT+R"],
    "CharShapeHeightIncrease": [None, "크기 크게 ALT+SHIFT+E"],
    "CharShapeItalic": [None, "이탤릭 ALT + SHIFT + I"],
    "CharShapeLang": [None, "글꼴 언어(글자 모양 대화상자에서 Focus이동용으로 사용)"],
    "CharShapeNextFaceName": [None, "다음 글꼴 ALT+SHIFT+F"],
    "CharShapeNormal": [None, "보통모양 ALT+SHIFT+C"],
    "CharShapeOutline": [None, "외곽선"],
    "CharShapePrevFaceName": [None, "이전 글꼴 ALT+SHIFT+G"],
    "CharShapeShadow": [None, "그림자"],
    "CharShapeSpacing": [None, "자간(글자 모양 대화상자에서 Focus이동용으로 사용)"],
    "CharShapeSpacingDecrease": [None, "자간 좁게 ALT+SHIFT+N"],
    "CharShapeSpacingIncrease": [None, "자간 넓게 ALT+SHIFT+W"],
    "CharShapeSubscript": [None, "아래첨자 ALT+SHIFT+S"],
    "CharShapeSuperscript": [None, "위첨자 ALT+SHIFT+P"],
    "CharShapeSuperSubscript": [None, '첨자 : "위첨자 -> 아래첨자 -> 보통" 반복'],
    "CharShapeTextColorBlack": ["CharShape", "글자색을 검정"],
    "CharShapeTextColorBlue": ["CharShape", "글자색을 파랑"],
    "CharShapeTextColorBluish": ["CharShape", "글자색을 청록"],
    "CharShapeTextColorGreen": ["CharShape", "글자색을 초록"],
    "CharShapeTextColorRed": ["CharShape", "글자색을 빨강"],
    "CharShapeTextColorViolet": ["CharShape", "글자색을 자주"],
    "CharShapeTextColorWhite": ["CharShape", "글자색을 흰색"],
    "CharShapeTextColorYellow": ["CharShape", "글자색을 노랑"],
    "CharShapeTypeFace": [None, "글꼴 이름(글자 모양 대화상자에서 Focus이동용으로 사용)"],
    "CharShapeUnderline": [None, "밑줄 ALT+SHIFT+U"],
    "CharShapeWidth": [None, "장평(글자 모양 대화상자에서 Focus이동용으로 사용)"],
    "CharShapeWidthDecrease": [None, "장평 좁게 ALT+SHIFT+J"],
    "CharShapeWidthIncrease": [None, "장평 넓게 ALT+SHIFT+K"],
    "Close": [None, "현재 리스트를 닫고 상위 리스트로 이동."],
    "CloseEx": [
        None,
        "현재 리스트를 닫고 상위 리스트로 이동. \tClose의 확장 액션으로 전체화면 보기일 때 Root list로 빠져나온다. Shift+Esc",
    ],
    "Comment": [None, "숨은 설명"],
    "CommentDelete": [None, "숨은 설명 지우기"],
    "CommentModify": [None, "숨은 설명 고치기"],
    "ComposeChars": ["ChCompose", "글자 겹침"],
    "ConvertCase": ["ConvertCase", "대소문자 바꾸기"],
    "ConvertFullHalfWidth": ["ConvertFullHalf", "전각 반각 바꾸기"],
    "ConvertHiraGata": ["ConvertHiraToGata", "일어 바꾸기"],
    "ConvertJianFan": ["ConvertJianFan", "간/번체 바꾸기 \tText가 선택된 상태에서만 동작"],
    "ConvertToHangul": ["ConvertToHangul", "한글로"],
    "Copy": [None, "복사하기"],
    "CopyPage": [None, "페이지 복사하기"],
    "Cut": [None, "오려두기"],
    "Delete": [None, "Delete"],
    "DeleteBack": [None, "Backspace"],
    "DeleteCtrls": ["DeleteCtrls", "조판 부호 지우기"],
    "DeleteDutmal": [None, "덧말 지우기"],
    "DeleteField": [None, "누름틀/메모지우기 \t누름틀/메모 안의 내용은 지우지 않고, 단순히 누름틀만 지운다."],
    "DeleteFieldMemo": [None, "메모 지우기"],
    "DeleteLine": [None, "CTRL-Y (한줄 지우기)"],
    "DeleteLineEnd": [None, "ALT-Y (현재 커서에서 줄 끝까지 지우기)"],
    "DeleteWord": [None, "단어 지우기 CTRL-T"],
    "DeleteWordBack": [None, "CTRL-BS(Back Space)"],
    "DocFindEnd": ["FindReplace", "문서 찾기 종료"],
    "DocFindInit": ["FindReplace", "문서 찾기 초기화"],
    "DocFindNext": ["DocFindInfo", "문서 찾기 계속"],
    "DocSummaryInfo": ["SummaryInfo", "문서 정보"],
    "DocumentInfo": ["DocumentInfo", "현재 문서에 대한 정보"],
    "DrawObjCancelOneStep": [None, "다각형(곡선) 그리는 중 이전 선 지우기"],
    "DrawObjCreatorArc": ["ShapeObject", "호 그리기"],
    "DrawObjCreatorCanvas": ["ShapeObject", "캔버스 그리기"],
    "DrawObjCreatorCurve": ["ShapeObject", "곡선 그리기"],
    "DrawObjCreatorEllipse": ["ShapeObject", "원 그리기"],
    "DrawObjCreatorFreeDrawing": [None, "펜"],
    "DrawObjCreatorLine": ["ShapeObject", "선 그리기"],
    "DrawObjCreatorMultiArc": ["ShapeObject", "반복해서 호 그리기"],
    "DrawObjCreatorMultiCanvas": ["ShapeObject", "반복해서 캔버스 그리기"],
    "DrawObjCreatorMultiCurve": ["ShapeObject", "반복해서 곡선 그리기"],
    "DrawObjCreatorMultiEllipse": ["ShapeObject", "반복해서 원 그리기"],
    "DrawObjCreatorMultiFreeDrawing": ["ShapeObject", "반복해서 펜 그리기"],
    "DrawObjCreatorMultiLine": ["ShapeObject", "반복해서 선 그리기"],
    "DrawObjCreatorMultiPolygon": ["ShapeObject", "반복해서 다각형 그리기"],
    "DrawObjCreatorMultiRectangle": ["ShapeObject", "반복해서 사각형 그리기"],
    "DrawObjCreatorMultiTextBox": ["ShapeObject", "반복해서 글상자 그리기"],
    "DrawObjCreatorObject": ["ShapeObject", "그리기 개체"],
    "DrawObjCreatorPolygon": ["ShapeObject", "다각형 그리기"],
    "DrawObjCreatorRectangle": ["ShapeObject", "사각형 그리기"],
    "DrawObjCreatorTextBox": ["ShapeObject", "글상자"],
    "DrawObjEditDetail": [None, "그리기 개체 편집"],
    "DrawObjOpenClosePolygon": [None, "다각형 열기/닫기"],
    "DrawObjTemplateLoad": ["ShapeObject", "그리기 마당에서 불러오기"],
    "DrawObjTemplateSave": [None, "그리기 마당에 등록"],
    "DrawShapeObjShadow": ["ShapeObject", "그리기 개체 그림자 만들기/지우기 \t개체가 선택된 상태에서만 동작"],
    "DropCap": ["DropCap", "문단 첫 글자 장식"],
    "DutmalChars": ["Dutmal", "덧말 넣기"],
    "EditFieldMemo": [None, "메모 내용 편집"],
    "EquationCreate": ["EqEdit", "수식 만들기"],
    "EquationModify": ["EqEdit", "수식 편집하기"],
    "EquationPropertyDialog": ["ShapeObject", "수식 개체 속성 고치기"],
    "Erase": [None, "지우기"],
    "ExchangeFootnoteEndnote": ["ExchangeFootnoteEndNote", "각주/미주 변환"],
    "ExecReplace": ["FindReplace", "바꾸기(실행)"],
    "FileClose": [None, "문서 닫기"],
    "FileNew": [None, "새문서"],
    "FileOpen": [None, "파일 열기"],
    "FileOpenMRU": [None, "최근 작업 문서"],
    "FilePassword": ["Password", "문서 암호"],
    "FilePreview": [None, "미리 보기"],
    "FileQuit": [None, "끝"],
    "FileSave": [None, "파일 저장"],
    "FileSaveAs": [None, "다른 이름으로 저장"],
    "FileSetSecurity": [
        "FileSetSecurity",
        "배포용 문서(출판 전용 문서). \t대화상자를 띄우지 않고 ParameterSet을 직접 설정하여 생성한다. \t예제는 “배포용 문서 만들기“ 참고",
    ],
    "FileTemplate": ["FileOpen", "문서마당"],
    "FindAll": ["FindReplace", "모두 찾기"],
    "FindDlg": ["FindReplace", "찾기"],
    "FindForeBackBookmark": [None, "앞뒤로 찾아가기 : 책갈피"],
    "FindForeBackCtrl": [None, "앞뒤로 찾아가기 : 조판 부호"],
    "FindForeBackFind": [None, "앞뒤로 찾아가기 : 찾기"],
    "FindForeBackLine": [None, "앞뒤로 찾아가기 : 줄"],
    "FindForeBackPage": [None, "앞뒤로 찾아가기 : 페이지"],
    "FindForeBackSection": [None, "앞뒤로 찾아가기 : 구역"],
    "FindForeBackStyle": [None, "앞뒤로 찾아가기 : 스타일"],
    "FootnoteOption": ["SecDef", "각주/미주 모양"],
    "ForwardFind": ["FindReplace", "앞으로 찾기"],
    "FrameStatusBar": [None, "상태바 보이기/숨기기"],
    "FtpUpload": ["FtpUpload", "웹 서버로 올리기"],
    "FtpDownload": ["FtpDownload", "FTP서버에서 파일 다운 받아 문서 오픈하기"],
    "GetDefaultBullet": ["ParaShape", "글머리표 디폴트 값"],
    "GetDefaultParaNumber": ["ParaShape", "문단번호 디폴트 값"],
    "GetDocFilters": ["DocFilters", "유틸리티 액션"],
    # "GetRome String": [
    #     "ChangeRome",
    #     "로마자 스펠링(Rome Spelling)을 얻기 위한 액션이다. \tRun()으로 실행시키면 프로그램이 죽는다. 반드시 ParameterSet을 생성한 다음에 Execute() 시킨다.",
    # ],
    "GetSectionApplyString": ["SectionApply", "유틸리티 액션"],
    "GetSectionApplyTo": ["SectionApply", "유틸리티 액션"],
    "GetVersionItemInfo": [
        "VersionInfo",
        "저장된 버전 정보/비교 Item을 얻어오는 액션이다. \tParameterSet에 얻어올 Item의 Index값을 반드시 세팅한 후 사용한다.",
    ],
    "Goto": ["GotoE", "찾아가기"],
    "GotoStyle": ["GotoE", "찾아가기-스타일(찾기/바꾸기 대화상자에서 사용)"],
    "HanThDIC": [None, "유의어 사전"],
    "HeaderFooter": ["HeaderFooter", "머리말/꼬리말"],
    "HeaderFooterDelete": [None, "머리말 지우기"],
    "HeaderFooterInsField": ["HeaderFooter", "코드 넣기"],
    "HeaderFooterModify": [None, "머리말/꼬리말 고치기 \t(조판부호 상태에서만 사용가능)"],
    "HeaderFooterToNext": [None, "이후 머리말"],
    "HeaderFooterToPrev": [None, "이전 머리말"],
    "HiddenCredits": [None, "인터넷 정보"],
    "HideTitle": [
        None,
        "차례 숨기기([도구-차례/찾아보기-차례 숨기기] 메뉴에 대응). \t적용여부는 Ctrl+G,C를 이용해 조판부호를 확인하면 알 수 있다.",
    ],
    # "Him Config": [None, "입력기 언어별 환경설정"],
    "HimKbdChange": [None, "바꾸기"],
    "HwpCtrlEquationCreate97": [None, "수식 만들기(한글97버전)"],
    "HwpCtrlFileNew": [None, "새문서"],
    "HwpCtrlFileOpen": [None, "파일 열기"],
    "HwpCtrlFileSave": [None, "파일 저장"],
    "HwpCtrlFileSaveAs": [None, "다른 이름으로 저장"],
    "HwpCtrlFileSaveAsAutoBlock": [
        None,
        "블록 저장 (한글 컨트롤 전용). \t만약 텍스트가 선택되지 않은 경우에는 다른 이름으로 저장이 실행된다.",
    ],
    "HwpCtrlFileSaveAutoBlock": [
        None,
        "블록 저장 (한글 컨트롤 전용). \t만약 텍스트가 선택되지 않은 경우에는 저장하기가 실행된다.",
    ],
    "HwpCtrlFindDlg": [None, "찾기 대화상자"],
    "HwpCtrlReplaceDlg": [None, "바꾸기 대화상자"],
    "HwpDic": [None, "한컴 사전"],
    "Hyperlink": ["HyperLink", "캐럿이 필드 안에 위치했는지 여부에 따라 Insert 또는 Modify 하이퍼링크 액션"],
    "HyperlinkBackward": [None, "하이퍼링크 뒤로"],
    "HyperlinkForward": [None, "하이퍼링크 앞으로"],
    "HyperlinkJump": ["HyperlinkJump", "하이퍼링크 이동"],
    "Idiom": ["Idiom", "상용구"],
    "ImageFindPath": [None, "그림 경로 찾기"],
    "IndexMark": ["IndexMark", "찾아보기 표시"],
    "IndexMarkModify": ["IndexMark", "찾아보기 표시 고치기"],
    "InputCodeChange": [
        None,
        "문자/코드 변환. \t현재 캐럿의 바로 앞 문자를 찾아서 문자이면 코드로, 코드이면 문자로 변환해준다.(변환 가능한 코드영역 0x0020 ~ 0x10FFFF 까지)",
    ],
    "InputCodeTable": ["CodeTable", "문자표"],
    "InputDateStyle": [
        "InputDateStyle",
        "날짜/시간 형식 지정해서 넣기 ([입력-날짜/시간-날짜/시간 형식]메뉴와 동일).",
    ],
    "InputHanja": [None, "한자 변환"],
    "InputHanjaBusu": [None, "부수로 입력"],
    "InputHanjaMean": [None, "새김으로 입력"],
    "InsertAutoNum": [None, "번호 다시 넣기"],
    "InsertCCLMark": ["HyperLink", "CCL 넣기"],
    "InsertChart": ["OleCreation", "차트 만들기"],
    "InsertConnectLineArcBoth": ["ShapeObject", "개체 연결선(구부러진 양쪽 화살표 연결선)"],
    "InsertConnectLineArcNoArrow": ["ShapeObject", "개체 연결선(구부러진 연결선)"],
    "InsertConnectLineArcOneWay": ["ShapeObject", "개체 연결선(구부러진 화살표 연결선)"],
    "InsertConnectLineMultiArcBoth": [
        "ShapeObject",
        "개체 연결선 반복해서 그리기(구부러진 양쪽 화살표 연결선)",
    ],
    "InsertConnectLineMultiArcNoArrow": [
        "ShapeObject",
        "개체 연결선 반복해서 그리기(구부러진 양쪽 화살표 연결선)",
    ],
    "InsertConnectLineMultiArcOneWay": [
        "ShapeObject",
        "개체 연결선 반복해서 그리기(구부러진 양쪽 화살표 연결선)",
    ],
    "InsertConnectLineMultiStraightBoth": [
        "ShapeObject",
        "개체 연결선 반복해서 그리기(직선 양쪽 화살표 연결선)",
    ],
    "InsertConnectLineMultiStraightNoArrow": ["ShapeObject", "개체 연결선 반복해서 그리기(직선 연결선)"],
    "InsertConnectLineMultiStraightOneWay": [
        "ShapeObject",
        "개체 연결선 반복해서 그리기(직선 화살표 연결선)",
    ],
    "InsertConnectLineMultiStrokeBoth": [
        "ShapeObject",
        "개체 연결선 반복해서 그리기(꺾인 양쪽 화살표 연결선)",
    ],
    "InsertConnectLineMultiStrokeNoArrow": ["ShapeObject", "개체 연결선 반복해서 그리기(꺾인 연결선)"],
    "InsertConnectLineMultiStrokeOneWay": [
        "ShapeObject",
        "개체 연결선 반복해서 그리기(꺾인 화살표 연결선)",
    ],
    "InsertConnectLineStraightBoth": ["ShapeObject", "개체 연결선(직선 양쪽 화살표 연결선)"],
    "InsertConnectLineStraightNoArrow": ["ShapeObject", "개체 연결선(직선 연결선)"],
    "InsertConnectLineStraightOneWay": ["ShapeObject", "개체 연결선(직선 화살표 연결선)"],
    "InsertConnectLineStrokeBoth": ["ShapeObject", "개체 연결선(꺾인 양쪽 화살표 연결선)"],
    "InsertConnectLineStrokeNoArrow": ["ShapeObject", "개체 연결선(꺾인 연결선)"],
    "InsertConnectLineStrokeOneWay": ["ShapeObject", "개체 연결선(꺾인 화살표 연결선)"],
    "InsertCpNo": [None, "상용구 코드 넣기(현재 쪽 번호)"],
    "InsertCpTpNo": [None, "상용구 코드 넣기(현재 쪽/전체 쪽)"],
    "InsertCrossReference": ["ActionCrossRef", "상호 참조 만들기(삽입하기)"],
    "InsertDateCode": [None, "상용구 코드 넣기(만든 날짜)"],
    "InsertDocInfo": [None, "상용구 코드 넣기(만든 사람, 현재 쪽, 만든 날짜)"],
    "InsertDocTitle": ["InsertFieldTemplate", "상용구 코드 넣기(문서 제목)"],
    "InsertEndnote": [None, "미주 입력"],
    "InsertFieldDateTime": [None, "날짜/시간 코드로 넣기([입력-날짜/시간-날짜/시간 코드]메뉴와 동일)"],
    "InsertFieldFileName": ["InsertFieldTemplate", "파일 이름 넣기([입력-날짜/시간-파일 이름]메뉴와 동일)"],
    "InsertFieldMemo": [None, "메모 넣기([입력-메모-메모 넣기]메뉴와 동일)"],
    "InsertFieldRevisionChagne": [None, "메모고침표 넣기(현재 한글메뉴에 없음, 메모와 동일한 기능)"],
    "InsertFieldTemplate": ["InsertFieldTemplate", "문서마당 정보"],
    "InsertFile": ["InsertFile", "끼워 넣기"],
    "InsertFileName": ["InsertFieldTemplate", "상용구 코드 넣기(파일 이름만)"],
    "InsertFilePath": ["InsertFieldTemplate", "상용구 코드 넣기(파일 이름과 경로)"],
    "InsertFixedWidthSpace": [None, "고정폭 빈칸 삽입"],
    "InsertFootnote": [None, "각주 입력"],
    "InsertHyperlink": ["HyperlinkJump", "하이퍼링크 만들기"],
    "InsertIdiom": ["Idiom", "상용구 등록"],
    "InsertLastPrintDate": [None, "상용구 코드 넣기(마지막 인쇄한 날짜)"],
    "InsertLastSaveBy": [None, "상용구 코드 넣기(마지막 저장한 사람)"],
    "InsertLastSaveDate": [None, "상용구 코드 넣기(마지막 저장한 날짜)"],
    "InsertLine": [None, "선 넣기"],
    "InsertNonBreakingSpace": [None, "묶음 빈칸 삽입"],
    "InsertPageNum": [None, "쪽 번호 넣기"],
    "InsertRevision": ["RevisionDef", "교정 부호 넣기([입력-교정 부호-교정 부호 넣기]메뉴와 동일)"],
    "InsertRevisionAttach": ["RevisionDef", "교정 부호 넣기 : 붙임표"],
    "InsertRevisionClipping": ["RevisionDef", "교정 부호 넣기 : 뺌표"],
    "InsertRevisionDelete": ["RevisionDef", "교정 부호 넣기 : 지움표"],
    "InsertRevisionHyperlink": ["HyperLink", "교정 부호 넣기 : 자료연결"],
    "InsertRevisionInsert": ["RevisionDef", "교정 부호 넣기 : 넣음표"],
    "InsertRevisionLeftMove": ["RevisionDef", "교정 부호 넣기 : 왼자리 옮김표"],
    "InsertRevisionLine": ["RevisionDef", "교정 부호 넣기 : 줄표"],
    "InsertRevisionLineAttach": ["RevisionDef", "교정 부호 넣기 : 줄 붙임표"],
    "InsertRevisionLineInsert": ["RevisionDef", "교정 부호 넣기 : 줄 비움표"],
    "InsertRevisionLineLink": ["RevisionDef", "교정 부호 넣기 : 줄 이음표"],
    "InsertRevisionLineSeparate": ["RevisionDef", "교정 부호 넣기 : 줄 바꿈표"],
    "InsertRevisionLineTransfer": ["RevisionDef", "교정 부호 넣기 : 줄 서로 바꿈표"],
    "InsertRevisionLineTransferSplit": ["RevisionDef", "교정 부호 넣기 : 줄 서로 바꿈 나눔표(내부용)"],
    "InsertRevisionPraise": ["RevisionDef", "교정 부호 넣기 : 칭찬표"],
    "InsertRevisionRightMove": ["RevisionDef", "교정 부호 넣기 : 오른자리 옮김표"],
    "InsertRevisionSawTooth": ["RevisionDef", "교정 부호 넣기 : 톱니표"],
    "InsertRevisionSimpleChange": ["RevisionDef", "교정 부호 넣기 : 고침표"],
    "InsertRevisionSpace": ["RevisionDef", "교정 부호 넣기 : 띄움표"],
    "InsertRevisionSymbol": ["RevisionDef", "교정 부호 넣기 : 부호 넣음표"],
    "InsertRevisionThinking": ["RevisionDef", "교정 부호 넣기 : 생각표"],
    "InsertRevisionTransfer": ["RevisionDef", "교정 부호 넣기 : 자리 바꿈표"],
    "InsertRevisionTransferSplit": ["RevisionDef", "교정 부호 넣기 : 자리바꿈 나눔표(내부용)"],
    "InsertSoftHyphen": [None, "하이픈 삽입"],
    "InsertSpace": [None, "공백 삽입"],
    "InsertStringDateTime": [None, "날짜/시간 넣기 - 문자열로 넣기([입력-날짜/시간-날짜/시간 문자열]메뉴와 동일)"],
    "InsertTab": [None, "탭 삽입"],
    "InsertText": ["InsertText", "텍스트 삽입"],
    "InsertTpNo": [None, "상용구 코드 넣기(전체 쪽수)"],
    "InsertUserName": ["InsertFieldTemplate", "상용구 코드 넣기(만든 사람)"],
    "InsertVoice": ["OleCreation", "음성 삽입"],
    "Jajun": [None, "한자 자전"],
    "LabelAdd": [None, "라벨 새 쪽 추가하기"],
    "LabelTemplate": [None, "라벨 문서 만들기"],
    "LinkDocument": ["LinkDocument", "문서 연결([파일-문서 연결]메뉴와 동일)"],
    "LinkTextBox": [None, "글상자 연결 \t글상자가 선택되지 않았거나, 캐럿이 글상자 내부에 있지 않으면 동작하지 않는다."],
    "MacroDefine": ["KeyMacro", "매크로 정의"],
    "MacroPause": [None, "매크로 실행 일시 중지 (정의/실행)"],
    "MacroPlay1": [None, "매크로 1"],
    "MacroPlay10": [None, "매크로 10"],
    "MacroPlay11": [None, "매크로 11"],
    "MacroPlay2": [None, "매크로 2"],
    "MacroPlay3": [None, "매크로 3"],
    "MacroPlay4": [None, "매크로 4"],
    "MacroPlay5": [None, "매크로 5"],
    "MacroPlay6": [None, "매크로 6"],
    "MacroPlay7": [None, "매크로 7"],
    "MacroPlay8": [None, "매크로 8"],
    "MacroPlay9": [None, "매크로 9"],
    "MacroRepeat": [None, "매크로 실행"],
    "MacroRepeatDlg": ["KeyMacro", "매크로 실행"],
    "MacroStop": [None, "매크로 실행 중지 (정의/실행)"],
    "MailMergeField": [None, "메일 머지 필드(표시달기 or 고치기)"],
    "MailMergeGenerate": ["MailMergeGenerate", "메일 머지 만들기"],
    "MailMergeInsert": ["FieldCtrl", "메일 머지 표시 달기"],
    "MailMergeModify": ["FieldCtrl", "메일 머지 고치기"],
    "MakeAllVersionDiffs": [
        "VersionInfo",
        "모든 버전비교 문서 만들기. \t현재 문서 및 문서가 가지고 있는 버전정보를 HML파일로 생성한다.(생성된 파일을 가지고 향 후 버전비교를 실행한다)",
    ],
    "MakeContents": ["MakeContents", "차례 만들기"],
    "MakeIndex": [None, "찾아보기 만들기"],
    "ManualChangeHangul": [
        None,
        "한영 수동 전환. \t현재 커서위치 또는 문단나누기 이전에 입력된 내용에 대해서 강제적으로 한/영 전환을 한다.",
    ],
    "ManuScriptTemplate": ["FileOpen", "원고지 쓰기"],
    "MarkPenShape": [
        "MarkpenShape",
        "형광펜, 선택된 Text영역의 배경을 형광펜으로 칠해준다. \tRun() 실행불가, 반드시 MarkpenShape ParameterSet의 Color 아이템 값을 설정하고 사용해야 함",
    ],
    "MarkTitle": [
        None,
        "제목 차례 표시([도구-차례/찾아보기-제목 차례 표시]메뉴에 대응) \t차례 코드가 삽입되어 나중에 차례 만들기에서 사용할 수 있다.적용여부는 Ctrl+G,C를 이용해 조판부호를 확인하면 알 수 있다.",
    ],
    "MasterPage": ["MasterPage", "바탕쪽"],
    "MasterPageDelete": ["MasterPage", "바탕쪽 삭제바탕쪽 편집모드일 경우에만 동작한다."],
    "MasterPageDuplicate": [
        None,
        "기존 바탕쪽과 겹침 \t바탕쪽 편집상태가 활성화되어 있으며 [구역 마지막쪽], [구역임의 쪽]일 경우에만 사용 가능하다.",
    ],
    "MasterPageEntry": ["MasterPage", "바탕쪽 편집모드 \t바탕쪽이 존재할 때만 편집모드로 변환한다."],
    "MasterPageExcept": [None, "첫 쪽 제외"],
    "MasterPageFront": [None, "바탕쪽 앞으로 보내기 \t바탕쪽 편집모드일 경우에만 동작한다."],
    "MasterPagePrevSection": [None, "앞 구역 바탕쪽 사용 ( 활성 <-> 비활성 )"],
    "MasterPageToNext": [None, "이후 바탕쪽"],
    "MasterPageToPrevious": [None, "이전 바탕쪽"],
    "MasterPageTypeDlg": ["MasterPage", "바탕쪽 종류 다이얼로그 띄움"],
    "MemoShape": ["SecDef", "메모 모양([입력-메모-메모 모양]메뉴와 동일함)"],
    "MessageBox": [None, "메시지 박스"],
    "ModifyBookmark": ["BookMark", "책갈피 고치기"],
    "ModifyComposeChars": [None, "고치기 - 글자 겹침"],
    "ModifyCrossReference": ["ActionCrossRef", "상호 참조 고치기"],
    "ModifyCtrl": [None, "고치기 : 컨트롤"],
    "ModifyDutmal": [None, "고치기 - 덧말"],
    "ModifyFieldClickhere": ["InsertFieldTemplate", "누름틀 정보 고치기"],
    "ModifyFieldDate": ["InsertFieldTemplate", "날짜 필드 고치기"],
    "ModifyFieldDateTime": [
        "InputDateStyle",
        '날짜/시간 넣기 고치기. \t반드시 코드로 작성된 "날짜/시간"이어야하며 코드의 앞(누름틀 밖의)에 캐럿이 존재해야만 동작한다.',
    ],
    "ModifyFieldPath": ["InsertFieldTemplate", "문서 경로 필드 고치기"],
    "ModifyFieldSummary": ["InsertFieldTemplate", "문서 요약 필드 고치기"],
    "ModifyFieldUserInfo": ["InsertFieldTemplate", "개인 정보 필드 고치기"],
    "ModifyFillProperty": [
        None,
        "고치기(채우기 속성 탭으로) \t만약 Ctrl(ShapeObject,누름틀, 날짜/시간 코드 등)이 선택되지 않았다면 역방향탐색(SelectCtrlReverse)을 이용해서 개체를 탐색한다. 채우기 속성이 없는 Ctrl일 경우에는 첫 번째 탭이 선택된 상태로 고치기 창이 뜬다.",
    ],
    "ModifyHyperlink": ["HyperLink", "하이퍼링크 고치기"],
    "ModifyLineProperty": [
        None,
        "고치기(선/테두리 속성 탭으로) \t만약 Ctrl(ShapeObject,누름틀, 날짜/시간 코드 등)이 선택되지 않았다면 역방향탐색(SelectCtrlReverse)을 이용해서 개체를 탐색한다. 선/테두리 속성이 없는 Ctrl일 경우에는 첫 번째 탭이 선택된 상태로 고치기 창이 뜬다.",
    ],
    "ModifyRevision": [
        "RevisionDef",
        "교정 부호 고치기ModifyFieldDateTime과 마찬가지로 정확히 교정부호(조판 부호)의 앞에 캐럿이 존재해야 실행된다.",
    ],
    "ModifyRevisionHyperlink": [
        "HyperLink",
        "자료 연결(교정 부호) 고치기 \tModifyRevision과 마찬가지로 정확히 교정부호(조판 부호)의 앞에 캐럿이 존재해야 실행된다. Run()으로 실행되지 않는다.",
    ],
    "ModifySection": ["SecDef", "구역"],
    "ModifyShapeObject": [None, "고치기 - 개체 속성"],
    "MoveColumnBegin": [
        None,
        "단의 시작점으로 이동한다. 단이 없을 경우에는 아무동작도 하지 않는다. 해당 리스트 안에서만 동작한다.",
    ],
    "MoveColumnEnd": [None, "단의 끝점으로 이동한다. 단이 없을 경우에는 아무동작도 하지 않는다. 해당 리스트 안에서만 동작한다."],
    "MoveDocBegin": [
        None,
        "문서의 시작으로 이동. \t만약 셀렉션을 확장하는 경우에는 LIST_BEGIN/END와 동일하다. 현재 서브 리스트 내에 있으면 빠져나간다.",
    ],
    "MoveDocEnd": [
        None,
        "문서의 끝으로 이동. \t만약 셀렉션을 확장하는 경우에는 LIST_BEGIN/END와 동일하다. 현재 서브 리스트 내에 있으면 빠져나간다.",
    ],
    "MoveDown": [None, "캐럿을 (논리적 개념의) 아래로 이동시킨다."],
    "MoveLeft": [None, "캐럿을 (논리적 개념의) 왼쪽으로 이동시킨다."],
    "MoveLineBegin": [None, "현재 위치한 줄의 시작/끝으로 이동"],
    "MoveLineDown": [None, "한 줄 아래로 이동한다."],
    "MoveLineEnd": [None, "현재 위치한 줄의 시작/끝으로 이동"],
    "MoveLineUp": [None, "한 줄 위로 이동한다."],
    "MoveListBegin": [None, "현재 리스트의 시작으로 이동"],
    "MoveListEnd": [None, "현재 리스트의 끝으로 이동"],
    "MoveNextChar": [None, "한 글자 뒤로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MoveNextColumn": [None, "뒤 단으로 이동"],
    "MoveNextParaBegin": [None, "다음 문단의 시작으로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MoveNextPos": [None, "한 글자 뒤로 이동. 서브 리스트를 옮겨 다닐 수 있다."],
    "MoveNextPosEx": [
        None,
        "한 글자 뒤로 이동. 서브 리스트를 옮겨 다닐 수 있다. (머리말, 꼬리말, 각주, 미주, 글상자 포함)",
    ],
    "MoveNextWord": [None, "한 단어 뒤로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MovePageBegin": [
        None,
        "현재 페이지의 시작점으로 이동한다. \t만약 캐럿의 위치가 변경되었다면 화면이 전환되어 쪽의 상단으로 페이지뷰잉이 맞춰진다.",
    ],
    "MovePageDown": [None, "앞 페이지의 시작으로 이동. 현재 탑레벨 리스트가 아니면 탑레벨 리스트로 빠져나온다."],
    "MovePageEnd": [
        None,
        "현재 페이지의 끝점으로 이동한다. \t만약 캐럿의 위치가 변경되었다면 화면이 전환되어 쪽의 하단으로 페이지뷰잉이 맞춰진다.",
    ],
    "MovePageUp": [None, "뒤 페이지의 시작으로 이동. 현재 탑레벨 리스트가 아니면 탑레벨 리스트로 빠져나온다."],
    "MoveParaBegin": [None, "현재 위치한 문단의 시작/끝으로 이동"],
    "MoveParaEnd": [None, "현재 위치한 문단의 시작/끝으로 이동"],
    "MoveParentList": [
        None,
        "한 레벨 상위/탑레벨/루트 리스트로 이동한다. \t현재 루트 리스트에 위치해 있어 더 이상 상위 리스트가 없을 때는 위치 이동 없이 리턴한다. 이동한 후의 위치는 상위 리스트에서 서브리스트가 속한 컨트롤 코드가 위치한 곳이다. 위치 이동시 셀렉션은 무조건 풀린다.",
    ],
    "MovePrevChar": [None, "한 글자 앞 이동. 현재 리스트만을 대상으로 동작한다."],
    "MovePrevColumn": [None, "앞 단으로 이동"],
    "MovePrevParaBegin": [None, "앞 문단의 시작으로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MovePrevParaEnd": [None, "앞 문단의 끝으로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MovePrevPos": [None, "한 글자 앞으로 이동. 서브 리스트를 옮겨 다닐 수 있다."],
    "MovePrevPosEx": [
        None,
        "한 글자 앞으로 이동. 서브 리스트를 옮겨 다닐 수 있다. (머리말, 꼬리말, 각주, 미주, 글상자 포함)",
    ],
    "MovePrevWord": [None, "한 단어 앞으로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MoveRight": [None, "캐럿을 (논리적 개념의) 오른쪽으로 이동시킨다."],
    "MoveRootList": [
        None,
        "한 레벨 상위/탑레벨/루트 리스트로 이동한다. \t현재 루트 리스트에 위치해 있어 더 이상 상위 리스트가 없을 때는 위치 이동 없이 리턴한다. 이동한 후의 위치는 상위 리스트에서 서브리스트가 속한 컨트롤 코드가 위치한 곳이다. 위치 이동시 셀렉션은 무조건 풀린다.",
    ],
    "MoveScrollDown": [None, "아래 방향으로 스크롤하면서 이동"],
    "MoveScrollNext": [None, "다음 방향으로 스크롤하면서 이동"],
    "MoveScrollPrev": [None, "이전 방향으로 스크롤하면서 이동"],
    "MoveScrollUp": [None, "위 방향으로 스크롤하면서 이동"],
    "MoveSectionDown": [None, "뒤 섹션으로 이동. 현재 루트 리스트가 아니면 루트 리스트로 빠져나온다."],
    "MoveSectionUp": [None, "앞 섹션으로 이동. 현재 루트 리스트가 아니면 루트 리스트로 빠져나온다."],
    "MoveSelDocBegin": [None, "셀렉션: 문서 처음"],
    "MoveSelDocEnd": [None, "셀렉션: 문서 끝"],
    "MoveSelDown": [None, "셀렉션: 캐럿을 (논리적 방향) 아래로 이동"],
    "MoveSelLeft": [None, "셀렉션: 캐럿을 (논리적 방향) 왼쪽으로 이동"],
    "MoveSelLineBegin": [None, "셀렉션: 줄 처음"],
    "MoveSelLineDown": [None, "셀렉션: 한줄 아래"],
    "MoveSelLineEnd": [None, "셀렉션: 줄 끝"],
    "MoveSelLineUp": [None, "셀렉션: 한줄 위"],
    "MoveSelListBegin": [None, "셀렉션: 리스트 처음"],
    "MoveSelListEnd": [None, "셀렉션: 리스트 끝"],
    "MoveSelNextChar": [None, "셀렉션: 다음 글자"],
    "MoveSelNextParaBegin": [None, "셀렉션: 다음 문단 처음"],
    "MoveSelNextPos": [None, "셀렉션: 다음 위치"],
    "MoveSelNextWord": [None, "셀렉션: 다음 단어"],
    "MoveSelPageDown": [None, "셀렉션: 페이지다운"],
    "MoveSelPageUp": [None, "셀렉션: 페이지 업"],
    "MoveSelParaBegin": [None, "셀렉션: 문단 처음"],
    "MoveSelParaEnd": [None, "셀렉션: 문단 끝"],
    "MoveSelPrevChar": [None, "셀렉션: 이전 글자"],
    "MoveSelPrevParaBegin": [None, "셀렉션: 이전 문단 시작"],
    "MoveSelPrevParaEnd": [None, "셀렉션: 이전 문단 끝"],
    "MoveSelPrevPos": [None, "셀렉션: 이전 위치"],
    "MoveSelPrevWord": [None, "셀렉션: 이전 단어"],
    "MoveSelRight": [None, "셀렉션: 캐럿을 (논리적 방향) 오른쪽으로 이동"],
    "MoveSelTopLevelBegin": [None, "셀렉션: 처음"],
    "MoveSelTopLevelEnd": [None, "셀렉션: 끝"],
    "MoveSelUp": [None, "셀렉션: 캐럿을 (논리적 방향) 위로 이동"],
    "MoveSelViewDown": [None, "셀렉션: 아래"],
    "MoveSelViewUp": [None, "셀렉션: 위"],
    "MoveSelWordBegin": [None, "셀렉션: 단어 처음"],
    "MoveSelWordEnd": [None, "셀렉션: 단어 끝"],
    "MoveTopLevelBegin": [None, "탑레벨 리스트의 시작으로 이동"],
    "MoveTopLevelEnd": [None, "탑레벨 리스트의 끝으로 이동"],
    "MoveTopLevelList": [
        None,
        "한 레벨 상위/탑레벨/루트 리스트로 이동한다. \t현재 루트 리스트에 위치해 있어 더 이상 상위 리스트가 없을 때는 위치 이동 없이 리턴한다. 이동한 후의 위치는 상위 리스트에서 서브리스트가 속한 컨트롤 코드가 위치한 곳이다. 위치 이동시 셀렉션은 무조건 풀린다.",
    ],
    "MoveUp": [None, "캐럿을 (논리적 개념의) 위로 이동시킨다."],
    "MoveViewBegin": [None, "현재 뷰의 시작에 위치한 곳으로 이동"],
    "MoveViewDown": [None, "현재 뷰의 크기만큼 아래로 이동한다. PgDn 키의 기능이다."],
    "MoveViewEnd": [None, "현재 뷰의 끝에 위치한 곳으로 이동"],
    "MoveViewUp": [None, "현재 뷰의 크기만큼 위로 이동한다. PgUp 키의 기능이다."],
    "MoveWordBegin": [None, "현재 위치한 단어의 시작으로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MoveWordEnd": [None, "현재 위치한 단어의 끝으로 이동. 현재 리스트만을 대상으로 동작한다."],
    "MPSectionToNext": [None, "이후 구역으로"],
    "MPSectionToPrevious": [None, "이전 구역으로"],
    "MultiColumn": ["ColDef", "다단"],
    "NewNumber": ["AutoNum", "새 번호로 시작"],
    "NewNumberModify": ["AutoNum", "새 번호 고치기"],
    "NextTextBoxLinked": [None, "연결된 글상자의 다음 글상자로 이동"],
    "NoteDelete": [None, "주석 지우기"],
    "NoteModify": [None, "주석 고치기"],
    "NoteNumProperty": [None, "주석 번호 속성"],
    "NoteToNext": [None, "주석 다음으로 이동"],
    "NoteToPrev": [None, "주석 앞으로 이동"],
    "OleCreateNew": ["OleCreation", "개체 삽입"],
    "OutlineNumber": ["SecDef", "개요번호"],
    "PageBorder": ["SecDef", "쪽 테두리/배경"],
    "PageHiding": ["PageHiding", "감추기"],
    "PageHidingModify": ["PageHiding", "감추기 고치기"],
    "PageNumPos": ["PageNumPos", "쪽 번호 매기기"],
    "PageNumPosModify": ["PageNumPos", "쪽 번호 매기기"],
    "PageSetup": ["SecDef", "편집 용지"],
    "ParagraphShape": ["ParaShape", "문단 모양"],
    "ParagraphShapeAlignCenter": [None, "가운데 정렬"],
    "ParagraphShapeAlignDistribute": [None, "배분 정렬"],
    "ParagraphShapeAlignDivision": [None, "나눔 정렬"],
    "ParagraphShapeAlignJustify": [None, "양쪽 정렬"],
    "ParagraphShapeAlignLeft": [None, "왼쪽 정렬"],
    "ParagraphShapeAlignRight": [None, "오른쪽 정렬"],
    "ParagraphShapeDecreaseLeftMargin": [None, "왼쪽 여백 줄이기"],
    "ParagraphShapeDecreaseLineSpacing": [None, "줄 간격을 점점 좁힘"],
    "ParagraphShapeDecreaseMargin": [None, "왼쪽-오른쪽 여백 줄이기"],
    "ParagraphShapeDecreaseRightMargin": [None, "오른쪽 여백 키우기"],
    "ParagraphShapeIncreaseLeftMargin": [None, "왼쪽 여백 키우기"],
    "ParagraphShapeIncreaseLineSpacing": [None, "줄 간격을 점점 넓힘"],
    "ParagraphShapeIncreaseMargin": [None, "왼쪽-오른쪽 여백 키우기"],
    "ParagraphShapeIncreaseRightMargin": [None, "오른쪽 여백 줄이기"],
    "ParagraphShapeIndentAtCaret": [None, "첫 줄 내어 쓰기"],
    "ParagraphShapeIndentNegative": [None, "첫 줄을 한 글자 내어 씀"],
    "ParagraphShapeIndentPositive": [None, "첫 줄을 한 글자 들여 씀"],
    "ParagraphShapeProtect": [None, "문단 보호"],
    "ParagraphShapeWithNext": [None, "다음 문단과 함께"],
    "ParaNumberBullet": ["ParaShape", "문단번호/글머리표 한 수준 위로"],
    "ParaNumberBulletLevelDown": ["ParaShape", "문단번호/글머리표 한 수준 아래로"],
    "ParaNumberBulletLevelUp": ["ParaShape", "문단번호/글머리표 한 수준 위로"],
    "ParaShapeDialog": ["ParaShape", "문단 모양 대화상자(내부 구현용)"],
    "Paste": ["SelectionOpt", "붙이기"],
    "PastePage": [None, "페이지 붙이기"],
    "PasteSpecial": [None, "골라 붙이기"],
    "PictureEffect1": [None, "그림 그레이 스케일"],
    "PictureEffect2": [None, "그림 흑백으로"],
    "PictureEffect3": [None, "그림 워터마크"],
    "PictureEffect4": [None, "그림 효과 없음"],
    "PictureEffect5": [None, "그림 밝기 증가"],
    "PictureEffect6": [None, "그림 밝기 감소"],
    "PictureEffect7": [None, "그림 명암 증가"],
    "PictureEffect8": [None, "그림 명암 감소"],
    "PictureInsertDialog": [None, "그림 넣기 (대화상자를 띄워 선택한 이미지 파일을 문서에 삽입하는 액션 : API용)"],
    "PictureLinkedToEmbedded": [None, "연결된 그림을 모두 삽입그림으로"],
    "PictureSave": [None, "그림 빼내기"],
    "PictureScissor": [None, "그림 자르기"],
    "PictureToOriginal": [None, "그림 원래 그림으로"],
    "Preference": ["Preference", "환경 설정"],
    "Presentation": ["Presentation", "프레젠테이션"],
    "PresentationSetup": ["Presentation", "프레젠테이션 설정"],
    "PrevTextBoxLinked": [
        None,
        "연결된 글상자의 이전 글상자로 이동 \t현재 글상자가 선택되거나, 글상자 내부에 캐럿이 존재하지 않으면 동작하지 않는다.",
    ],
    "Print": ["Print", "인쇄"],
    "PrintToImage": ["PrintToImage", "그림으로 저장하기"],
    "PutBullet": ["ParaShape", "글머리표 달기"],
    "PutNewParaNumber": ["ParaShape", "문단번호 새 번호 시작하기"],
    "PutOutlineNumber": ["ParaShape", "개요번호 달기"],
    "PutParaNumber": ["ParaShape", "문단번호 달기"],
    # "QuickCommand Run": [None, "입력 자동 명령 동작"],
    "QuickCorrect": [None, "빠른 교정 (실질적인 동작 Action)"],
    # "QuickCorrect Edit": ["QCorrect", "빠른 교정 ―내용 편집"],
    # "QuickCorrect Run": [None, "빠른 교정 ―내용 편집"],
    # "QuickCorrect Sound": [None, "빠른 교정 ― 메뉴에서 효과음 On/Off"],
    # "QuickMarkInsert0 ~ 9": [None, "쉬운 책갈피 - 삽입"],
    # "QuickMarkMove0 ~ 9": [None, "쉬운 책갈피 - 이동"],
    "RecalcPageCount": [None, "현재 페이지의 쪽 번호 재계산"],
    "RecentCode": [None, "최근에 사용한 문자표 입력 \t최근에 사용한 문자표가 없을 경우에는 문자표 대화상자를 띄운다."],
    "Redo": [None, "다시 실행"],
    "RepeatFind": ["FindReplace", "다시 찾기"],
    "ReplaceDlg": ["FindReplace", "찾아 바꾸기"],
    "ReturnKeyInField": [None, "캐럿이 필드 안에 위치한 상태에서 Return Key에 대한 액션 분기"],
    "ReturnPrevPos": [None, "직전위치로 돌아가기"],
    "ReverseFind": ["FindReplace", "거꾸로 찾기"],
    "SaveBlockAction": ["FileSaveBlock", "블록 저장하기"],
    "SaveFootnote": ["SaveFootnote", "주석 저장"],
    "SaveHistoryItem": [
        "VersionInfo",
        "새 버전으로 저장([파일-버전 비교/저장]메뉴를 누르면 나타나는 대화상자에서 [새 버전 저장] 버튼을 누른 것과 동일)",
    ],
    "ScrMacroDefine": ["ScriptMacro", "매크로 정의 \t매크로 정의 대화상자를 띄우고, 설정이 끝나면 매크로를 기록한다."],
    "ScrMacroPause": [None, "매크로 기록 일시정지/재시작"],
    # "ScrMacroPlay1 ~ 11": [None, "#번 매크로 실행(Alt+Shift+#)"],
    "ScrMacroRepeatDlg": [
        "ScriptMacro",
        "스크립트 매크로 실행 대화상자([도구-매크로-스크립트 매크로 실행]메뉴와 동일)",
    ],
    "ScrMacroSecurityDlg": [None, "스크립트 매크로 보안 설정 대화상자([도구-매크로-스크립트 매크로 보안]메뉴와 동일)"],
    "ScrMacroStop": [None, "매크로 기록 중지"],
    "SearchAddress": [None, "주소 검색"],
    "SearchForeign": [None, "외래어사전검색"],
    "Select": [None, "선택 (F3 Key를 누른 효과)"],
    "SelectAll": [None, "모두 선택"],
    "SelectColumn": [None, "칸 블록 선택"],
    "SelectCtrlFront": [None, "개체선택 정방향"],
    "SelectCtrlReverse": [None, "개체선택 역방향"],
    "SendBrowserText": [None, "브라우저로 보내기"],
    "SendMailAttach": ["FileSendMail", "편지 보내기 - 첨부파일로"],
    "SendMailText": ["FileSendMail", "편지 보내기 - 본문으로"],
    "ShapeCopyPaste": ["ShapeCopyPaste", "모양 복사"],
    "ShapeObjAlignBottom": [None, "아래로 정렬"],
    "ShapeObjAlignCenter": [None, "가운데로 정렬"],
    "ShapeObjAlignHeight": [None, "높이 맞춤"],
    "ShapeObjAlignHorzSpacing": [None, "왼쪽/오른쪽 일정한 비율로 정렬"],
    "ShapeObjAlignLeft": [None, "왼쪽으로 정렬"],
    "ShapeObjAlignMiddle": [None, "중간 정렬"],
    "ShapeObjAlignRight": [None, "오른쪽으로 정렬"],
    "ShapeObjAlignSize": [None, "폭/높이 맞춤"],
    "ShapeObjAlignTop": [None, "위로 정렬"],
    "ShapeObjAlignVertSpacing": [None, "위/아래 일정한 비율로 정렬"],
    "ShapeObjAlignWidth": [None, "폭 맞춤"],
    "ShapeObjAttachCaption": [None, "캡션 넣기"],
    "ShapeObjAttachTextBox": [None, "글 상자로 만들기"],
    "ShapeObjAttrDialog": ["ShapeObject", "틀 속성 환경설정"],
    "ShapeObjBringForward": [None, "앞으로"],
    "ShapeObjBringInFrontOfText": [None, "글 앞으로"],
    "ShapeObjBringToFront": [None, "맨 앞으로"],
    "ShapeObjCtrlSendBehindText": [None, "글 뒤로"],
    "ShapeObjDetachCaption": [None, "캡션 없애기"],
    "ShapeObjDetachTextBox": [None, "글상자 속성 없애기"],
    "ShapeObjDialog": ["ShapeObject", "환경설정"],
    "ShapeObjectCopy": ["ShapeObjectCopyPaste", "그리기 모양 복사"],
    "ShapeObjectPaste": ["ShapeObjectCopyPaste", "그리기 모양 붙여넣기"],
    "ShapeObjFillProperty": [None, "고치기 대화상자중 fill tab"],
    "ShapeObjGroup": [None, "틀 묶기"],
    "ShapeObjHorzFlip": [None, "그리기 개체 좌우 뒤집기"],
    "ShapeObjHorzFlipOrgState": [None, "그리기 개체 좌우 뒤집기 원상태로 되돌리기"],
    "ShapeObjInsertCaptionNum": [None, "캡션 번호 넣기"],
    "ShapeObjLineProperty": [None, "고치기 대화상자중 line tab"],
    "ShapeObjLock": [None, "개체 Lock"],
    "ShapeObjMoveDown": [None, "키로 움직이기(아래)"],
    "ShapeObjMoveLeft": [None, "키로 움직이기(왼쪽)"],
    "ShapeObjMoveRight": [None, "키로 움직이기(오른쪽)"],
    "ShapeObjMoveUp": [None, "키로 움직이기(위)"],
    "ShapeObjNextObject": [None, "이후 개채로 이동(tab키)"],
    "ShapeObjNorm": [None, "기본 도형 설정 (새 그리기 속성으로)"],
    "ShapeObjPrevObject": [None, "이전 개체로 이동(shift + tab키)"],
    "ShapeObjRandomAngleRotater": ["ShapeObject", "자유각 회전"],
    "ShapeObjResizeDown": [None, "키로 크기 조절(shift + 아래)"],
    "ShapeObjResizeLeft": [None, "키로 크기 조절(shift + 왼쪽)"],
    "ShapeObjResizeRight": [None, "키로 크기 조절(shift + 오른쪽)"],
    "ShapeObjResizeUp": [None, "키로 크기 조절(shift + 위)"],
    "ShapeObjRightAngleRotater": [None, "90도 회전"],
    "ShapeObjRightAngleRotaterAnticlockwise": [None, "-90도 회전"],
    "ShapeObjRotater": [None, "자유각 회전(회전중심 고정)"],
    "ShapeObjSaveAsPicture": [None, "그리기개체를 그림으로 저장하기"],
    "ShapeObjSelect": [None, "틀 선택 도구"],
    "ShapeObjSendBack": [None, "뒤로"],
    "ShapeObjSendToBack": [None, "맨 뒤로"],
    "ShapeObjShadowEnlarge": [None, "그리기 개체 그림자를 큰 형태로 변경그림자가 없으면 생성한다."],
    "ShapeObjShadowMoveDown": [None, "그리기 개체 그림자를 밑으로 이동시킨다. 그림자가 없으면 생성한다."],
    "ShapeObjShadowMoveLeft": [None, "그리기 개체 그림자를 왼쪽으로 이동시킨다. 그림자가 없으면 생성한다."],
    "ShapeObjShadowMoveRight": [None, "그리기 개체 그림자를 오른쪽으로 이동시킨다. 그림자가 없으면 생성한다."],
    "ShapeObjShadowMoveUp": [None, "그리기 개체 그림자를 위로 이동시킨다. 그림자가 없으면 생성한다."],
    "ShapeObjShadowNarrow": [None, "그리기 개체 그림자를 작은 형태로 변경. 그림자가 없으면 생성한다."],
    "ShapeObjShadowParellelLeftBottom": [
        None,
        "그리기 개체 그림자를 원본 개체와 동일한 크기로 왼쪽하단에 생성한다.",
    ],
    "ShapeObjShadowParellelLeftTop": [None, "그리기 개체 그림자를 원본 개체와 동일한 크기로 왼쪽상단에 생성한다."],
    "ShapeObjShadowParellelRightBottom": [
        None,
        "그리기 개체 그림자를 원본 개체와 동일한 크기로 오른쪽하단에 생성한다.",
    ],
    "ShapeObjShadowParellelRightTop": [None, "그리기 개체 그림자를 원본 개체와 동일한 크기로 오른쪽상단에 생성한다."],
    "ShapeObjShadowShearLeftBottom": [None, "그리기 개체 그림자를 왼쪽 뒷부분으로 눕혀서 생성한다."],
    "ShapeObjShadowShearLeftTop": [None, "그리기 개체 그림자를 왼쪽 앞부분으로 눕혀서 생성한다."],
    "ShapeObjShadowShearRightBottom": [None, "그리기 개체 그림자를 오른쪽 뒷부분으로 눕혀서 생성한다."],
    "ShapeObjShadowShearRightTop": [None, "그리기 개체 그림자를 오른쪽 앞부분으로 눕혀서 생성한다."],
    "ShapeObjShear": ["ShapeObject", "그리기 개체 기울이기"],
    "ShapeObjTableSelCell": [None, "테이블 선택상태에서 첫 번째 셀 선택하기"],
    "ShapeObjTextBoxEdit": [None, "글상자 선택상태에서 편집모드로 들어가기"],
    "ShapeObjUngroup": [None, "틀 풀기"],
    "ShapeObjUnlockAll": [None, "개체 Unlock All"],
    "ShapeObjVertFlip": [None, "그리기 개체 상하 뒤집기"],
    "ShapeObjVertFlipOrgState": [None, "그리기 개체 상하 뒤집기 원상태로 되돌리기"],
    "ShapeObjWrapSquare": [None, "직사각형"],
    "ShapeObjWrapTopAndBottom": [None, "자리 차지"],
    "Soft Keyboard": [None, "보기"],
    "Sort": ["Sort", "소트"],
    "SpellingCheck": [None, "맞춤법"],
    "SplitMemoOpen": [None, "메모창 열기"],
    "Style": ["Style", "스타일 (한글2005이하버전)"],
    "StyleAdd": ["Style", "스타일 추가(한글2007, 스타일 대화상자를 띄움)"],
    "StyleClearCharStyle": [None, "글자 스타일 해제"],
    "StyleDelete": ["StyleDelete", "스타일 제거"],
    "StyleEdit": ["Style", "스타일 편집"],
    "StyleEx": ["Style", "스타일 (한글2007)"],
    "StyleParaNumberBullet": ["ParaShape", "문단번호/글머리표"],
    "StyleShortcut1": [None, "스타일 단축키<Ctrl + 1>"],
    "StyleShortcut10": [None, "스타일 단축키<Ctrl + 0>"],
    "StyleShortcut2": [None, "스타일 단축키<Ctrl + 2>"],
    "StyleShortcut3": [None, "스타일 단축키<Ctrl + 3>"],
    "StyleShortcut4": [None, "스타일 단축키<Ctrl + 4>"],
    "StyleShortcut5": [None, "스타일 단축키<Ctrl + 5>"],
    "StyleShortcut6": [None, "스타일 단축키<Ctrl + 6>"],
    "StyleShortcut7": [None, "스타일 단축키<Ctrl + 7>"],
    "StyleShortcut8": [None, "스타일 단축키<Ctrl + 8>"],
    "StyleShortcut9": [None, "스타일 단축키<Ctrl + 9>"],
    "StyleTemplate": ["StyleTemplate", "스타일 마당"],
    "Sum": ["Sum", "블록 합계"],
    "TableAppendRow": [None, "줄 추가"],
    "TableAutoDrawPenStyleWidthDlg": ["TableDrawPen", "표 그리기 선 모양"],
    "TableAutoFill": ["AutoFill", "자동 채우기"],
    "TableAutoFillDlg": ["AutoFill", "자동 채우기"],
    "TableCellBlock": [None, "셀 블록"],
    "TableCellBlockCol": [None, "셀 블록 (칸)"],
    "TableCellBlockExtend": [None, "셀 블록 연장(F5 + F5)"],
    "TableCellBlockExtendAbs": [None, "셀 블록 연장(SHIFT + F5)"],
    "TableCellBlockRow": [None, "셀 블록(줄)"],
    "TableCellBorderAll": [None, "모든 셀 테두리 toggle(있음/없음). 셀 블록 상태일 경우에만 동작한다."],
    "TableCellBorderBottom": [None, "가장 아래 셀 테두리 toggle(있음/없음). 셀 블록 상태일 경우에만 동작한다."],
    "TableCellBorderDiagonalDown": [
        None,
        "대각선(⍂) 셀 테두리 toggle(있음/없음). 셀 블록 상태일 경우에만 동작한다.",
    ],
    "TableCellBorderDiagonalUp": [
        None,
        "대각선(⍁) 셀 테두리 toggle(있음/없음). 셀 블록 상태일 경우에만 동작한다.",
    ],
    "TableCellBorderInside": [None, "모든 안쪽 셀 테두리 toggle(있음/없음). 셀 블록 상태일 경우에만 동작한다."],
    "TableCellBorderInsideHorz": [
        None,
        "모든 안쪽 가로 셀 테두리 toggle(있음/없음). 셀 블록 상태일 경우에만 동작한다.",
    ],
    "TableCellBorderInsideVert": [
        None,
        "모든 안쪽 세로 셀 테두리 toggle(있음/없음). 셀 블록 상태일 경우에만 동작한다.",
    ],
    "TableCellBorderLeft": [None, "가장 왼쪽의 셀 테두리 toggle(있음/없음) 셀 블록 상태일 경우에만 동작한다."],
    "TableCellBorderNo": [None, "모든 셀 테두리 지움. 셀 블록 상태일 경우에만 동작한다."],
    "TableCellBorderOutside": [None, "바깥 셀 테두리 toggle(있음/없음) 셀 블록 상태일 경우에만 동작한다."],
    "TableCellBorderRight": [None, "가장 오른쪽의 셀 테두리 toggle(있음/없음) 셀 블록 상태일 경우에만 동작한다."],
    "TableCellBorderTop": [None, "가장 위의 셀 테두리 toggle(있음/없음) 셀 블록 상태일 경우에만 동작한다."],
    "TableCellShadeDec": ["CellBorderFill", "셀 배경의 음영을 낮춘다.(결과적으로 밝아진다)"],
    "TableCellShadeInc": ["CellBorderFill", "셀 배경의 음영을 높인다.(결과적으로 어두워진다)"],
    "TableColBegin": [None, "셀 이동: 열 시작"],
    "TableColEnd": [None, "셀 이동: 열 끝"],
    "TableColPageDown": [None, "셀 이동: 페이지다운"],
    "TableColPageUp": [None, "셀 이동: 페이지 업"],
    "TableCreate": ["TableCreation", "표 만들기"],
    "TableDeleteCell": [None, "셀 삭제"],
    "TableDeleteColumn": ["TableDeleteLine", "칸 지우기"],
    "TableDeleteRow": ["TableDeleteLine", "줄-칸 지우기"],
    "TableDeleteRowColumn": ["TableDeleteLine", "줄-칸 지우기"],
    "TableDistributeCellHeight": [None, "셀 높이를 같게"],
    "TableDistributeCellWidth": [None, "셀 너비를 같게"],
    "TableDrawPen": [None, "표 그리기"],
    "TableEraser": [None, "표 지우개"],
    "TableFormula": ["FieldCtrl", "계산식"],
    "TableFormulaAvgAuto": [None, "블록 평균"],
    "TableFormulaAvgHor": [None, "가로 평균"],
    "TableFormulaAvgVer": [None, "세로 평균"],
    "TableFormulaProAuto": [None, "블록 곱"],
    "TableFormulaProHor": [None, "가로 곱"],
    "TableFormulaProVer": [None, "세로 곱"],
    "TableFormulaSumAuto": [None, "블록 합계"],
    "TableFormulaSumHor": [None, "가로 합계"],
    "TableFormulaSumVer": [None, "세로 합계"],
    "TableInsertLeftColumn": ["TableInsertLine", "왼쪽 칸 삽입"],
    "TableInsertLowerRow": ["TableInsertLine", "아래쪽 줄 삽입"],
    "TableInsertRightColumn": ["TableInsertLine", "오른쪽 칸 삽입"],
    "TableInsertRowColumn": ["TableInsertLine", "줄-칸 삽입"],
    "TableInsertUpperRow": ["TableInsertLine", "위쪽 줄 삽입"],
    "TableLeftCell": [None, "셀 이동: 셀 왼쪽"],
    "TableLowerCell": [None, "셀 이동: 셀 아래"],
    "TableMergeCell": [None, "셀 합치기"],
    "TableMergeTable": [None, "표 붙이기"],
    "TablePropertyDialog": ["ShapeObject", "표 고치기"],
    "TableResizeCellDown": [None, "셀 크기 변경: 셀 아래"],
    "TableResizeCellLeft": [None, "셀 크기 변경: 셀 왼쪽"],
    "TableResizeCellRight": [None, "셀 크기 변경: 셀 오른쪽"],
    "TableResizeCellUp": [None, "셀 크기 변경: 셀 위"],
    "TableResizeDown": [None, "셀 크기 변경"],
    "TableResizeExDown": [
        None,
        "셀 크기 변경: 셀 아래 \tTebleResizeDown과 다른 점은 셀 블록 상태가 아니어도 동작한다는 점이다.",
    ],
    "TableResizeExLeft": [
        None,
        "셀 크기 변경: 셀 왼쪽 \tTebleResizeLeft와 다른 점은 셀 블록 상태가 아니어도 동작한다는 점이다.",
    ],
    "TableResizeExRight": [
        None,
        "셀 크기 변경: 셀 오른쪽 \tTebleResizeRight와 다른 점은 셀 블록 상태가 아니어도 동작한다는 점이다.",
    ],
    "TableResizeExUp": [
        None,
        "셀 크기 변경: 셀 위 \tTebleResizeUp과 다른 점은 셀 블록 상태가 아니어도 동작한다는 점이다.",
    ],
    "TableResizeLeft": [None, "셀 크기 변경"],
    "TableResizeLineDown": [None, "셀 크기 변경: 선아래"],
    "TableResizeLineLeft": [None, "셀 크기 변경: 선 왼쪽"],
    "TableResizeLineRight": [None, "셀 크기 변경: 선 오른쪽"],
    "TableResizeLineUp": [None, "셀 크기 변경: 선 위"],
    "TableResizeRight": [None, "셀 크기 변경"],
    "TableResizeUp": [None, "셀 크기 변경"],
    "TableRightCell": [None, "셀 이동: 셀 오른쪽"],
    "TableRightCellAppend": [None, "셀 이동: 셀 오른쪽에 이어서"],
    "TableSplitCell": ["TableSplitCell", "셀 나누기"],
    "TableSplitCellCol2": ["TableSplitCell", "셀 칸 나누기"],
    "TableSplitCellRow2": ["TableSplitCell", "셀 줄 나누기"],
    "TableSplitTable": [None, "표 나누기"],
    "TableStringToTable": ["TableStrToTbl", "문자열을 표로"],
    "TableSubtractRow": ["TableDeleteLine", "표 줄 삭제"],
    "TableSwap": ["TableSwap", "표 뒤집기"],
    "TableTableToString": ["TableTblToStr", "표를 문자열로"],
    "TableTemplate": ["TableTemplate", "표 마당"],
    "TableUpperCell": [None, "셀 이동: 셀 위"],
    "TableVAlignBottom": [None, "셀 세로정렬 아래"],
    "TableVAlignCenter": [None, "셀 세로정렬 가운데"],
    "TableVAlignTop": [None, "셀 세로정렬 위"],
    "TextArtCreate": [None, "글맵시"],
    "TextArtModify": [None, "글맵시 고치기"],
    "TextArtShadow": [None, "글맵시 그림자 넣기/빼기"],
    "ToggleOverwrite": [None, "Toggle Overwrite"],
    "Undo": [None, "되살리기"],
    "UnlinkTextBox": [None, "글상자 연결 끊기"],
    "UserAutoFill": ["AutoFill", "자동 채우기(TableAutoFill, TableAutoFillDlg와 동일)"],
    "VersionDelete": ["VersionInfo", "버전정보 지우기"],
    "VersionDeleteAll": [None, "모든 버전정보 지우기"],
    "VersionInfo": ["VersionInfo", "버전 정보"],
    "VersionSave": ["VersionInfo", "버전 저장하기"],
    "VerticalText": ["TextVertical", "세로쓰기"],
    "ViewGridOption": ["GridInfo", "격자"],
    "ViewIdiom": [None, "상용구 보기"],
    "ViewOptionCtrlMark": [None, "조판 부호"],
    "ViewOptionGuideLine": [None, "안내선"],
    "ViewOptionMemo": [None, "메모 보이기/숨기기([보기-메모-메모 보이기/숨기기]메뉴와 동일)"],
    "ViewOptionMemoGuideline": [None, "메모 안내선 표시([보기-메모-메모 안내선 표시]메뉴와 동일)"],
    "ViewOptionPaper": [None, "쪽 윤곽 보기"],
    "ViewOptionParaMark": [None, "문단 부호"],
    "ViewOptionPicture": [None, "그림 보이기/숨기기([보기-그림]메뉴와 동일)"],
    "ViewOptionRevision": [None, "교정부호 보이기/숨기기([보기-교정부호]메뉴와 동일)"],
    "ViewShowGrid": ["GridInfo", "격자 보이기"],
    "ViewZoom": ["ViewProperties", "화면 확대(Ribbon)"],
    "ViewZoomFitPage": ["ViewProperties", "화면 확대: 페이지에 맞춤"],
    "ViewZoomFitWidth": ["ViewProperties", "화면 확대: 폭에 맞춤"],
    "ViewZoomNormal": ["ViewProperties", "화면 확대: 정상"],
    "VoiceCommand": [None, "음성 명령 동작"],
    # "VoiceCommand Config": [None, "음성 명령 설정"],
    # "VoiceCommand Resume": [None, "음성 명령 레코딩 시작"],
    # "VoiceCommand Stop": [None, "음성 명령 레코딩 중지"],
}

# %% ../nbs/02_api/01_actions.ipynb 6
class _Action:
    """한글 Action 클래스 입니다. 엑션의 기능을 사용하기 쉽게 만들고자 했습니다."""

    def __init__(self, app, action_key: str, pset_key=None):
        _pset_key, description = _action_info.get(action_key, (None, None))

        self.action_key = action_key
        self.description = description
        self.App = app
        if not pset_key:
            pset_key = _pset_key
        self.pset_key = pset_key

        # create action and set
        self.act = app.api.CreateAction(action_key)
        self.pset = self.get_pset(pset_key if pset_key else None)

    def __str__(self):
        return f"<Action {self.action_key}: {self.description}>"

    __repr__ = __str__

    def set_parameter(self, key: str, value):
        self.pset.HSet.SetItem(key, value)
        return self

    def run(self, pset=None):
        if pset:
            return self.act.Execute(pset)
        if self.pset:
            return self.act.Execute(self.pset.HSet)
        return self.act.Execute(None)

    def get_pset(self, pset_key=None):
        if not self.pset_key:
            return None
        pset = getattr(self.App.api.HParameterSet, f"H{self.pset_key}")
        self.App.api.HAction.GetDefault(pset_key if pset_key else self.action_key, pset.HSet)
        return pset
    
    def create_pset(self):
        pset = self.act.CreateSet()
        self.act.GetDefault(pset)
        return pset

# %% ../nbs/02_api/01_actions.ipynb 9
def create_action_wrapper(app, action_key, pset_key=None):
        def wrapper(pset_key=pset_key):
            return app.create_action(action_key, pset_key)
        return wrapper

# %% ../nbs/02_api/01_actions.ipynb 10
class _Actions:
    """사전에 정보가 확인된 Action들을 App에 등록하는 기능을 합니다."""

    def __init__(self, app):
        self._app = app

        self.AddHanjaWord = create_action_wrapper(app, 'AddHanjaWord')
        self.AllReplace = create_action_wrapper(app, 'AllReplace')
        self.AQcommandMerge = create_action_wrapper(app, 'AQcommandMerge')
        self.AutoChangeHangul = create_action_wrapper(app, 'AutoChangeHangul')
        self.AutoChangeRun = create_action_wrapper(app, 'AutoChangeRun')
        self.Average = create_action_wrapper(app, 'Average')
        self.BackwardFind = create_action_wrapper(app, 'BackwardFind')
        self.Bookmark = create_action_wrapper(app, 'Bookmark')
        self.BreakColDef = create_action_wrapper(app, 'BreakColDef')
        self.BreakColumn = create_action_wrapper(app, 'BreakColumn')
        self.BreakLine = create_action_wrapper(app, 'BreakLine')
        self.BreakPage = create_action_wrapper(app, 'BreakPage')
        self.BreakPara = create_action_wrapper(app, 'BreakPara')
        self.BreakSection = create_action_wrapper(app, 'BreakSection')
        self.Cancel = create_action_wrapper(app, 'Cancel')
        self.CaptureDialog = create_action_wrapper(app, 'CaptureDialog')
        self.CaptureHandler = create_action_wrapper(app, 'CaptureHandler')
        self.CellBorder = create_action_wrapper(app, 'CellBorder')
        self.CellBorderFill = create_action_wrapper(app, 'CellBorderFill')
        self.CellFill = create_action_wrapper(app, 'CellFill')
        self.CellZoneBorder = create_action_wrapper(app, 'CellZoneBorder')
        self.CellZoneBorderFill = create_action_wrapper(app, 'CellZoneBorderFill')
        self.CellZoneFill = create_action_wrapper(app, 'CellZoneFill')
        self.ChangeRome = create_action_wrapper(app, 'ChangeRome')
        self.CharShape = create_action_wrapper(app, 'CharShape')
        self.CharShapeBold = create_action_wrapper(app, 'CharShapeBold')
        self.CharShapeCenterline = create_action_wrapper(app, 'CharShapeCenterline')
        self.CharShapeDialog = create_action_wrapper(app, 'CharShapeDialog')
        self.CharShapeDialogWithoutBorder = create_action_wrapper(app, 'CharShapeDialogWithoutBorder')
        self.CharShapeEmboss = create_action_wrapper(app, 'CharShapeEmboss')
        self.CharShapeEngrave = create_action_wrapper(app, 'CharShapeEngrave')
        self.CharShapeHeight = create_action_wrapper(app, 'CharShapeHeight')
        self.CharShapeHeightDecrease = create_action_wrapper(app, 'CharShapeHeightDecrease')
        self.CharShapeHeightIncrease = create_action_wrapper(app, 'CharShapeHeightIncrease')
        self.CharShapeItalic = create_action_wrapper(app, 'CharShapeItalic')
        self.CharShapeLang = create_action_wrapper(app, 'CharShapeLang')
        self.CharShapeNextFaceName = create_action_wrapper(app, 'CharShapeNextFaceName')
        self.CharShapeNormal = create_action_wrapper(app, 'CharShapeNormal')
        self.CharShapeOutline = create_action_wrapper(app, 'CharShapeOutline')
        self.CharShapePrevFaceName = create_action_wrapper(app, 'CharShapePrevFaceName')
        self.CharShapeShadow = create_action_wrapper(app, 'CharShapeShadow')
        self.CharShapeSpacing = create_action_wrapper(app, 'CharShapeSpacing')
        self.CharShapeSpacingDecrease = create_action_wrapper(app, 'CharShapeSpacingDecrease')
        self.CharShapeSpacingIncrease = create_action_wrapper(app, 'CharShapeSpacingIncrease')
        self.CharShapeSubscript = create_action_wrapper(app, 'CharShapeSubscript')
        self.CharShapeSuperscript = create_action_wrapper(app, 'CharShapeSuperscript')
        self.CharShapeSuperSubscript = create_action_wrapper(app, 'CharShapeSuperSubscript')
        self.CharShapeTextColorBlack = create_action_wrapper(app, 'CharShapeTextColorBlack')
        self.CharShapeTextColorBlue = create_action_wrapper(app, 'CharShapeTextColorBlue')
        self.CharShapeTextColorBluish = create_action_wrapper(app, 'CharShapeTextColorBluish')
        self.CharShapeTextColorGreen = create_action_wrapper(app, 'CharShapeTextColorGreen')
        self.CharShapeTextColorRed = create_action_wrapper(app, 'CharShapeTextColorRed')
        self.CharShapeTextColorViolet = create_action_wrapper(app, 'CharShapeTextColorViolet')
        self.CharShapeTextColorWhite = create_action_wrapper(app, 'CharShapeTextColorWhite')
        self.CharShapeTextColorYellow = create_action_wrapper(app, 'CharShapeTextColorYellow')
        self.CharShapeTypeFace = create_action_wrapper(app, 'CharShapeTypeFace')
        self.CharShapeUnderline = create_action_wrapper(app, 'CharShapeUnderline')
        self.CharShapeWidth = create_action_wrapper(app, 'CharShapeWidth')
        self.CharShapeWidthDecrease = create_action_wrapper(app, 'CharShapeWidthDecrease')
        self.CharShapeWidthIncrease = create_action_wrapper(app, 'CharShapeWidthIncrease')
        self.Close = create_action_wrapper(app, 'Close')
        self.CloseEx = create_action_wrapper(app, 'CloseEx')
        self.Comment = create_action_wrapper(app, 'Comment')
        self.CommentDelete = create_action_wrapper(app, 'CommentDelete')
        self.CommentModify = create_action_wrapper(app, 'CommentModify')
        self.ComposeChars = create_action_wrapper(app, 'ComposeChars')
        self.ConvertCase = create_action_wrapper(app, 'ConvertCase')
        self.ConvertFullHalfWidth = create_action_wrapper(app, 'ConvertFullHalfWidth')
        self.ConvertHiraGata = create_action_wrapper(app, 'ConvertHiraGata')
        self.ConvertJianFan = create_action_wrapper(app, 'ConvertJianFan')
        self.ConvertToHangul = create_action_wrapper(app, 'ConvertToHangul')
        self.Copy = create_action_wrapper(app, 'Copy')
        self.CopyPage = create_action_wrapper(app, 'CopyPage')
        self.Cut = create_action_wrapper(app, 'Cut')
        self.Delete = create_action_wrapper(app, 'Delete')
        self.DeleteBack = create_action_wrapper(app, 'DeleteBack')
        self.DeleteCtrls = create_action_wrapper(app, 'DeleteCtrls')
        self.DeleteDutmal = create_action_wrapper(app, 'DeleteDutmal')
        self.DeleteField = create_action_wrapper(app, 'DeleteField')
        self.DeleteFieldMemo = create_action_wrapper(app, 'DeleteFieldMemo')
        self.DeleteLine = create_action_wrapper(app, 'DeleteLine')
        self.DeleteLineEnd = create_action_wrapper(app, 'DeleteLineEnd')
        self.DeleteWord = create_action_wrapper(app, 'DeleteWord')
        self.DeleteWordBack = create_action_wrapper(app, 'DeleteWordBack')
        self.DocFindEnd = create_action_wrapper(app, 'DocFindEnd')
        self.DocFindInit = create_action_wrapper(app, 'DocFindInit')
        self.DocFindNext = create_action_wrapper(app, 'DocFindNext')
        self.DocSummaryInfo = create_action_wrapper(app, 'DocSummaryInfo')
        self.DocumentInfo = create_action_wrapper(app, 'DocumentInfo')
        self.DrawObjCancelOneStep = create_action_wrapper(app, 'DrawObjCancelOneStep')
        self.DrawObjCreatorArc = create_action_wrapper(app, 'DrawObjCreatorArc')
        self.DrawObjCreatorCanvas = create_action_wrapper(app, 'DrawObjCreatorCanvas')
        self.DrawObjCreatorCurve = create_action_wrapper(app, 'DrawObjCreatorCurve')
        self.DrawObjCreatorEllipse = create_action_wrapper(app, 'DrawObjCreatorEllipse')
        self.DrawObjCreatorFreeDrawing = create_action_wrapper(app, 'DrawObjCreatorFreeDrawing')
        self.DrawObjCreatorLine = create_action_wrapper(app, 'DrawObjCreatorLine')
        self.DrawObjCreatorMultiArc = create_action_wrapper(app, 'DrawObjCreatorMultiArc')
        self.DrawObjCreatorMultiCanvas = create_action_wrapper(app, 'DrawObjCreatorMultiCanvas')
        self.DrawObjCreatorMultiCurve = create_action_wrapper(app, 'DrawObjCreatorMultiCurve')
        self.DrawObjCreatorMultiEllipse = create_action_wrapper(app, 'DrawObjCreatorMultiEllipse')
        self.DrawObjCreatorMultiFreeDrawing = create_action_wrapper(app, 'DrawObjCreatorMultiFreeDrawing')
        self.DrawObjCreatorMultiLine = create_action_wrapper(app, 'DrawObjCreatorMultiLine')
        self.DrawObjCreatorMultiPolygon = create_action_wrapper(app, 'DrawObjCreatorMultiPolygon')
        self.DrawObjCreatorMultiRectangle = create_action_wrapper(app, 'DrawObjCreatorMultiRectangle')
        self.DrawObjCreatorMultiTextBox = create_action_wrapper(app, 'DrawObjCreatorMultiTextBox')
        self.DrawObjCreatorObject = create_action_wrapper(app, 'DrawObjCreatorObject')
        self.DrawObjCreatorPolygon = create_action_wrapper(app, 'DrawObjCreatorPolygon')
        self.DrawObjCreatorRectangle = create_action_wrapper(app, 'DrawObjCreatorRectangle')
        self.DrawObjCreatorTextBox = create_action_wrapper(app, 'DrawObjCreatorTextBox')
        self.DrawObjEditDetail = create_action_wrapper(app, 'DrawObjEditDetail')
        self.DrawObjOpenClosePolygon = create_action_wrapper(app, 'DrawObjOpenClosePolygon')
        self.DrawObjTemplateLoad = create_action_wrapper(app, 'DrawObjTemplateLoad')
        self.DrawObjTemplateSave = create_action_wrapper(app, 'DrawObjTemplateSave')
        self.DrawShapeObjShadow = create_action_wrapper(app, 'DrawShapeObjShadow')
        self.DropCap = create_action_wrapper(app, 'DropCap')
        self.DutmalChars = create_action_wrapper(app, 'DutmalChars')
        self.EditFieldMemo = create_action_wrapper(app, 'EditFieldMemo')
        self.EquationCreate = create_action_wrapper(app, 'EquationCreate')
        self.EquationModify = create_action_wrapper(app, 'EquationModify')
        self.EquationPropertyDialog = create_action_wrapper(app, 'EquationPropertyDialog')
        self.Erase = create_action_wrapper(app, 'Erase')
        self.ExchangeFootnoteEndnote = create_action_wrapper(app, 'ExchangeFootnoteEndnote')
        self.ExecReplace = create_action_wrapper(app, 'ExecReplace')
        self.FileClose = create_action_wrapper(app, 'FileClose')
        self.FileNew = create_action_wrapper(app, 'FileNew')
        self.FileOpen = create_action_wrapper(app, 'FileOpen')
        self.FileOpenMRU = create_action_wrapper(app, 'FileOpenMRU')
        self.FilePassword = create_action_wrapper(app, 'FilePassword')
        self.FilePreview = create_action_wrapper(app, 'FilePreview')
        self.FileQuit = create_action_wrapper(app, 'FileQuit')
        self.FileSave = create_action_wrapper(app, 'FileSave')
        self.FileSaveAs = create_action_wrapper(app, 'FileSaveAs')
        self.FileSetSecurity = create_action_wrapper(app, 'FileSetSecurity')
        self.FileTemplate = create_action_wrapper(app, 'FileTemplate')
        self.FindAll = create_action_wrapper(app, 'FindAll')
        self.FindDlg = create_action_wrapper(app, 'FindDlg')
        self.FindForeBackBookmark = create_action_wrapper(app, 'FindForeBackBookmark')
        self.FindForeBackCtrl = create_action_wrapper(app, 'FindForeBackCtrl')
        self.FindForeBackFind = create_action_wrapper(app, 'FindForeBackFind')
        self.FindForeBackLine = create_action_wrapper(app, 'FindForeBackLine')
        self.FindForeBackPage = create_action_wrapper(app, 'FindForeBackPage')
        self.FindForeBackSection = create_action_wrapper(app, 'FindForeBackSection')
        self.FindForeBackStyle = create_action_wrapper(app, 'FindForeBackStyle')
        self.FootnoteOption = create_action_wrapper(app, 'FootnoteOption')
        self.ForwardFind = create_action_wrapper(app, 'ForwardFind')
        self.FrameStatusBar = create_action_wrapper(app, 'FrameStatusBar')
        self.FtpUpload = create_action_wrapper(app, 'FtpUpload')
        self.FtpDownload = create_action_wrapper(app, 'FtpDownload')
        self.GetDefaultBullet = create_action_wrapper(app, 'GetDefaultBullet')
        self.GetDefaultParaNumber = create_action_wrapper(app, 'GetDefaultParaNumber')
        self.GetDocFilters = create_action_wrapper(app, 'GetDocFilters')
        self.GetSectionApplyString = create_action_wrapper(app, 'GetSectionApplyString')
        self.GetSectionApplyTo = create_action_wrapper(app, 'GetSectionApplyTo')
        self.GetVersionItemInfo = create_action_wrapper(app, 'GetVersionItemInfo')
        self.Goto = create_action_wrapper(app, 'Goto')
        self.GotoStyle = create_action_wrapper(app, 'GotoStyle')
        self.HanThDIC = create_action_wrapper(app, 'HanThDIC')
        self.HeaderFooter = create_action_wrapper(app, 'HeaderFooter')
        self.HeaderFooterDelete = create_action_wrapper(app, 'HeaderFooterDelete')
        self.HeaderFooterInsField = create_action_wrapper(app, 'HeaderFooterInsField')
        self.HeaderFooterModify = create_action_wrapper(app, 'HeaderFooterModify')
        self.HeaderFooterToNext = create_action_wrapper(app, 'HeaderFooterToNext')
        self.HeaderFooterToPrev = create_action_wrapper(app, 'HeaderFooterToPrev')
        self.HiddenCredits = create_action_wrapper(app, 'HiddenCredits')
        self.HideTitle = create_action_wrapper(app, 'HideTitle')
        self.HimKbdChange = create_action_wrapper(app, 'HimKbdChange')
        self.HwpCtrlEquationCreate97 = create_action_wrapper(app, 'HwpCtrlEquationCreate97')
        self.HwpCtrlFileNew = create_action_wrapper(app, 'HwpCtrlFileNew')
        self.HwpCtrlFileOpen = create_action_wrapper(app, 'HwpCtrlFileOpen')
        self.HwpCtrlFileSave = create_action_wrapper(app, 'HwpCtrlFileSave')
        self.HwpCtrlFileSaveAs = create_action_wrapper(app, 'HwpCtrlFileSaveAs')
        self.HwpCtrlFileSaveAsAutoBlock = create_action_wrapper(app, 'HwpCtrlFileSaveAsAutoBlock')
        self.HwpCtrlFileSaveAutoBlock = create_action_wrapper(app, 'HwpCtrlFileSaveAutoBlock')
        self.HwpCtrlFindDlg = create_action_wrapper(app, 'HwpCtrlFindDlg')
        self.HwpCtrlReplaceDlg = create_action_wrapper(app, 'HwpCtrlReplaceDlg')
        self.HwpDic = create_action_wrapper(app, 'HwpDic')
        self.Hyperlink = create_action_wrapper(app, 'Hyperlink')
        self.HyperlinkBackward = create_action_wrapper(app, 'HyperlinkBackward')
        self.HyperlinkForward = create_action_wrapper(app, 'HyperlinkForward')
        self.HyperlinkJump = create_action_wrapper(app, 'HyperlinkJump')
        self.Idiom = create_action_wrapper(app, 'Idiom')
        self.ImageFindPath = create_action_wrapper(app, 'ImageFindPath')
        self.IndexMark = create_action_wrapper(app, 'IndexMark')
        self.IndexMarkModify = create_action_wrapper(app, 'IndexMarkModify')
        self.InputCodeChange = create_action_wrapper(app, 'InputCodeChange')
        self.InputCodeTable = create_action_wrapper(app, 'InputCodeTable')
        self.InputDateStyle = create_action_wrapper(app, 'InputDateStyle')
        self.InputHanja = create_action_wrapper(app, 'InputHanja')
        self.InputHanjaBusu = create_action_wrapper(app, 'InputHanjaBusu')
        self.InputHanjaMean = create_action_wrapper(app, 'InputHanjaMean')
        self.InsertAutoNum = create_action_wrapper(app, 'InsertAutoNum')
        self.InsertCCLMark = create_action_wrapper(app, 'InsertCCLMark')
        self.InsertChart = create_action_wrapper(app, 'InsertChart')
        self.InsertConnectLineArcBoth = create_action_wrapper(app, 'InsertConnectLineArcBoth')
        self.InsertConnectLineArcNoArrow = create_action_wrapper(app, 'InsertConnectLineArcNoArrow')
        self.InsertConnectLineArcOneWay = create_action_wrapper(app, 'InsertConnectLineArcOneWay')
        self.InsertConnectLineMultiArcBoth = create_action_wrapper(app, 'InsertConnectLineMultiArcBoth')
        self.InsertConnectLineMultiArcNoArrow = create_action_wrapper(app, 'InsertConnectLineMultiArcNoArrow')
        self.InsertConnectLineMultiArcOneWay = create_action_wrapper(app, 'InsertConnectLineMultiArcOneWay')
        self.InsertConnectLineMultiStraightBoth = create_action_wrapper(app, 'InsertConnectLineMultiStraightBoth')
        self.InsertConnectLineMultiStraightNoArrow = create_action_wrapper(app, 'InsertConnectLineMultiStraightNoArrow')
        self.InsertConnectLineMultiStraightOneWay = create_action_wrapper(app, 'InsertConnectLineMultiStraightOneWay')
        self.InsertConnectLineMultiStrokeBoth = create_action_wrapper(app, 'InsertConnectLineMultiStrokeBoth')
        self.InsertConnectLineMultiStrokeNoArrow = create_action_wrapper(app, 'InsertConnectLineMultiStrokeNoArrow')
        self.InsertConnectLineMultiStrokeOneWay = create_action_wrapper(app, 'InsertConnectLineMultiStrokeOneWay')
        self.InsertConnectLineStraightBoth = create_action_wrapper(app, 'InsertConnectLineStraightBoth')
        self.InsertConnectLineStraightNoArrow = create_action_wrapper(app, 'InsertConnectLineStraightNoArrow')
        self.InsertConnectLineStraightOneWay = create_action_wrapper(app, 'InsertConnectLineStraightOneWay')
        self.InsertConnectLineStrokeBoth = create_action_wrapper(app, 'InsertConnectLineStrokeBoth')
        self.InsertConnectLineStrokeNoArrow = create_action_wrapper(app, 'InsertConnectLineStrokeNoArrow')
        self.InsertConnectLineStrokeOneWay = create_action_wrapper(app, 'InsertConnectLineStrokeOneWay')
        self.InsertCpNo = create_action_wrapper(app, 'InsertCpNo')
        self.InsertCpTpNo = create_action_wrapper(app, 'InsertCpTpNo')
        self.InsertCrossReference = create_action_wrapper(app, 'InsertCrossReference')
        self.InsertDateCode = create_action_wrapper(app, 'InsertDateCode')
        self.InsertDocInfo = create_action_wrapper(app, 'InsertDocInfo')
        self.InsertDocTitle = create_action_wrapper(app, 'InsertDocTitle')
        self.InsertEndnote = create_action_wrapper(app, 'InsertEndnote')
        self.InsertFieldDateTime = create_action_wrapper(app, 'InsertFieldDateTime')
        self.InsertFieldFileName = create_action_wrapper(app, 'InsertFieldFileName')
        self.InsertFieldMemo = create_action_wrapper(app, 'InsertFieldMemo')
        self.InsertFieldRevisionChagne = create_action_wrapper(app, 'InsertFieldRevisionChagne')
        self.InsertFieldTemplate = create_action_wrapper(app, 'InsertFieldTemplate')
        self.InsertFile = create_action_wrapper(app, 'InsertFile')
        self.InsertFileName = create_action_wrapper(app, 'InsertFileName')
        self.InsertFilePath = create_action_wrapper(app, 'InsertFilePath')
        self.InsertFixedWidthSpace = create_action_wrapper(app, 'InsertFixedWidthSpace')
        self.InsertFootnote = create_action_wrapper(app, 'InsertFootnote')
        self.InsertHyperlink = create_action_wrapper(app, 'InsertHyperlink')
        self.InsertIdiom = create_action_wrapper(app, 'InsertIdiom')
        self.InsertLastPrintDate = create_action_wrapper(app, 'InsertLastPrintDate')
        self.InsertLastSaveBy = create_action_wrapper(app, 'InsertLastSaveBy')
        self.InsertLastSaveDate = create_action_wrapper(app, 'InsertLastSaveDate')
        self.InsertLine = create_action_wrapper(app, 'InsertLine')
        self.InsertNonBreakingSpace = create_action_wrapper(app, 'InsertNonBreakingSpace')
        self.InsertPageNum = create_action_wrapper(app, 'InsertPageNum')
        self.InsertRevision = create_action_wrapper(app, 'InsertRevision')
        self.InsertRevisionAttach = create_action_wrapper(app, 'InsertRevisionAttach')
        self.InsertRevisionClipping = create_action_wrapper(app, 'InsertRevisionClipping')
        self.InsertRevisionDelete = create_action_wrapper(app, 'InsertRevisionDelete')
        self.InsertRevisionHyperlink = create_action_wrapper(app, 'InsertRevisionHyperlink')
        self.InsertRevisionInsert = create_action_wrapper(app, 'InsertRevisionInsert')
        self.InsertRevisionLeftMove = create_action_wrapper(app, 'InsertRevisionLeftMove')
        self.InsertRevisionLine = create_action_wrapper(app, 'InsertRevisionLine')
        self.InsertRevisionLineAttach = create_action_wrapper(app, 'InsertRevisionLineAttach')
        self.InsertRevisionLineInsert = create_action_wrapper(app, 'InsertRevisionLineInsert')
        self.InsertRevisionLineLink = create_action_wrapper(app, 'InsertRevisionLineLink')
        self.InsertRevisionLineSeparate = create_action_wrapper(app, 'InsertRevisionLineSeparate')
        self.InsertRevisionLineTransfer = create_action_wrapper(app, 'InsertRevisionLineTransfer')
        self.InsertRevisionLineTransferSplit = create_action_wrapper(app, 'InsertRevisionLineTransferSplit')
        self.InsertRevisionPraise = create_action_wrapper(app, 'InsertRevisionPraise')
        self.InsertRevisionRightMove = create_action_wrapper(app, 'InsertRevisionRightMove')
        self.InsertRevisionSawTooth = create_action_wrapper(app, 'InsertRevisionSawTooth')
        self.InsertRevisionSimpleChange = create_action_wrapper(app, 'InsertRevisionSimpleChange')
        self.InsertRevisionSpace = create_action_wrapper(app, 'InsertRevisionSpace')
        self.InsertRevisionSymbol = create_action_wrapper(app, 'InsertRevisionSymbol')
        self.InsertRevisionThinking = create_action_wrapper(app, 'InsertRevisionThinking')
        self.InsertRevisionTransfer = create_action_wrapper(app, 'InsertRevisionTransfer')
        self.InsertRevisionTransferSplit = create_action_wrapper(app, 'InsertRevisionTransferSplit')
        self.InsertSoftHyphen = create_action_wrapper(app, 'InsertSoftHyphen')
        self.InsertSpace = create_action_wrapper(app, 'InsertSpace')
        self.InsertStringDateTime = create_action_wrapper(app, 'InsertStringDateTime')
        self.InsertTab = create_action_wrapper(app, 'InsertTab')
        self.InsertText = create_action_wrapper(app, 'InsertText')
        self.InsertTpNo = create_action_wrapper(app, 'InsertTpNo')
        self.InsertUserName = create_action_wrapper(app, 'InsertUserName')
        self.InsertVoice = create_action_wrapper(app, 'InsertVoice')
        self.Jajun = create_action_wrapper(app, 'Jajun')
        self.LabelAdd = create_action_wrapper(app, 'LabelAdd')
        self.LabelTemplate = create_action_wrapper(app, 'LabelTemplate')
        self.LinkDocument = create_action_wrapper(app, 'LinkDocument')
        self.LinkTextBox = create_action_wrapper(app, 'LinkTextBox')
        self.MacroDefine = create_action_wrapper(app, 'MacroDefine')
        self.MacroPause = create_action_wrapper(app, 'MacroPause')
        self.MacroPlay1 = create_action_wrapper(app, 'MacroPlay1')
        self.MacroPlay10 = create_action_wrapper(app, 'MacroPlay10')
        self.MacroPlay11 = create_action_wrapper(app, 'MacroPlay11')
        self.MacroPlay2 = create_action_wrapper(app, 'MacroPlay2')
        self.MacroPlay3 = create_action_wrapper(app, 'MacroPlay3')
        self.MacroPlay4 = create_action_wrapper(app, 'MacroPlay4')
        self.MacroPlay5 = create_action_wrapper(app, 'MacroPlay5')
        self.MacroPlay6 = create_action_wrapper(app, 'MacroPlay6')
        self.MacroPlay7 = create_action_wrapper(app, 'MacroPlay7')
        self.MacroPlay8 = create_action_wrapper(app, 'MacroPlay8')
        self.MacroPlay9 = create_action_wrapper(app, 'MacroPlay9')
        self.MacroRepeat = create_action_wrapper(app, 'MacroRepeat')
        self.MacroRepeatDlg = create_action_wrapper(app, 'MacroRepeatDlg')
        self.MacroStop = create_action_wrapper(app, 'MacroStop')
        self.MailMergeField = create_action_wrapper(app, 'MailMergeField')
        self.MailMergeGenerate = create_action_wrapper(app, 'MailMergeGenerate')
        self.MailMergeInsert = create_action_wrapper(app, 'MailMergeInsert')
        self.MailMergeModify = create_action_wrapper(app, 'MailMergeModify')
        self.MakeAllVersionDiffs = create_action_wrapper(app, 'MakeAllVersionDiffs')
        self.MakeContents = create_action_wrapper(app, 'MakeContents')
        self.MakeIndex = create_action_wrapper(app, 'MakeIndex')
        self.ManualChangeHangul = create_action_wrapper(app, 'ManualChangeHangul')
        self.ManuScriptTemplate = create_action_wrapper(app, 'ManuScriptTemplate')
        self.MarkPenShape = create_action_wrapper(app, 'MarkPenShape')
        self.MarkTitle = create_action_wrapper(app, 'MarkTitle')
        self.MasterPage = create_action_wrapper(app, 'MasterPage')
        self.MasterPageDelete = create_action_wrapper(app, 'MasterPageDelete')
        self.MasterPageDuplicate = create_action_wrapper(app, 'MasterPageDuplicate')
        self.MasterPageEntry = create_action_wrapper(app, 'MasterPageEntry')
        self.MasterPageExcept = create_action_wrapper(app, 'MasterPageExcept')
        self.MasterPageFront = create_action_wrapper(app, 'MasterPageFront')
        self.MasterPagePrevSection = create_action_wrapper(app, 'MasterPagePrevSection')
        self.MasterPageToNext = create_action_wrapper(app, 'MasterPageToNext')
        self.MasterPageToPrevious = create_action_wrapper(app, 'MasterPageToPrevious')
        self.MasterPageTypeDlg = create_action_wrapper(app, 'MasterPageTypeDlg')
        self.MemoShape = create_action_wrapper(app, 'MemoShape')
        self.MessageBox = create_action_wrapper(app, 'MessageBox')
        self.ModifyBookmark = create_action_wrapper(app, 'ModifyBookmark')
        self.ModifyComposeChars = create_action_wrapper(app, 'ModifyComposeChars')
        self.ModifyCrossReference = create_action_wrapper(app, 'ModifyCrossReference')
        self.ModifyCtrl = create_action_wrapper(app, 'ModifyCtrl')
        self.ModifyDutmal = create_action_wrapper(app, 'ModifyDutmal')
        self.ModifyFieldClickhere = create_action_wrapper(app, 'ModifyFieldClickhere')
        self.ModifyFieldDate = create_action_wrapper(app, 'ModifyFieldDate')
        self.ModifyFieldDateTime = create_action_wrapper(app, 'ModifyFieldDateTime')
        self.ModifyFieldPath = create_action_wrapper(app, 'ModifyFieldPath')
        self.ModifyFieldSummary = create_action_wrapper(app, 'ModifyFieldSummary')
        self.ModifyFieldUserInfo = create_action_wrapper(app, 'ModifyFieldUserInfo')
        self.ModifyFillProperty = create_action_wrapper(app, 'ModifyFillProperty')
        self.ModifyHyperlink = create_action_wrapper(app, 'ModifyHyperlink')
        self.ModifyLineProperty = create_action_wrapper(app, 'ModifyLineProperty')
        self.ModifyRevision = create_action_wrapper(app, 'ModifyRevision')
        self.ModifyRevisionHyperlink = create_action_wrapper(app, 'ModifyRevisionHyperlink')
        self.ModifySection = create_action_wrapper(app, 'ModifySection')
        self.ModifyShapeObject = create_action_wrapper(app, 'ModifyShapeObject')
        self.MoveColumnBegin = create_action_wrapper(app, 'MoveColumnBegin')
        self.MoveColumnEnd = create_action_wrapper(app, 'MoveColumnEnd')
        self.MoveDocBegin = create_action_wrapper(app, 'MoveDocBegin')
        self.MoveDocEnd = create_action_wrapper(app, 'MoveDocEnd')
        self.MoveDown = create_action_wrapper(app, 'MoveDown')
        self.MoveLeft = create_action_wrapper(app, 'MoveLeft')
        self.MoveLineBegin = create_action_wrapper(app, 'MoveLineBegin')
        self.MoveLineDown = create_action_wrapper(app, 'MoveLineDown')
        self.MoveLineEnd = create_action_wrapper(app, 'MoveLineEnd')
        self.MoveLineUp = create_action_wrapper(app, 'MoveLineUp')
        self.MoveListBegin = create_action_wrapper(app, 'MoveListBegin')
        self.MoveListEnd = create_action_wrapper(app, 'MoveListEnd')
        self.MoveNextChar = create_action_wrapper(app, 'MoveNextChar')
        self.MoveNextColumn = create_action_wrapper(app, 'MoveNextColumn')
        self.MoveNextParaBegin = create_action_wrapper(app, 'MoveNextParaBegin')
        self.MoveNextPos = create_action_wrapper(app, 'MoveNextPos')
        self.MoveNextPosEx = create_action_wrapper(app, 'MoveNextPosEx')
        self.MoveNextWord = create_action_wrapper(app, 'MoveNextWord')
        self.MovePageBegin = create_action_wrapper(app, 'MovePageBegin')
        self.MovePageDown = create_action_wrapper(app, 'MovePageDown')
        self.MovePageEnd = create_action_wrapper(app, 'MovePageEnd')
        self.MovePageUp = create_action_wrapper(app, 'MovePageUp')
        self.MoveParaBegin = create_action_wrapper(app, 'MoveParaBegin')
        self.MoveParaEnd = create_action_wrapper(app, 'MoveParaEnd')
        self.MoveParentList = create_action_wrapper(app, 'MoveParentList')
        self.MovePrevChar = create_action_wrapper(app, 'MovePrevChar')
        self.MovePrevColumn = create_action_wrapper(app, 'MovePrevColumn')
        self.MovePrevParaBegin = create_action_wrapper(app, 'MovePrevParaBegin')
        self.MovePrevParaEnd = create_action_wrapper(app, 'MovePrevParaEnd')
        self.MovePrevPos = create_action_wrapper(app, 'MovePrevPos')
        self.MovePrevPosEx = create_action_wrapper(app, 'MovePrevPosEx')
        self.MovePrevWord = create_action_wrapper(app, 'MovePrevWord')
        self.MoveRight = create_action_wrapper(app, 'MoveRight')
        self.MoveRootList = create_action_wrapper(app, 'MoveRootList')
        self.MoveScrollDown = create_action_wrapper(app, 'MoveScrollDown')
        self.MoveScrollNext = create_action_wrapper(app, 'MoveScrollNext')
        self.MoveScrollPrev = create_action_wrapper(app, 'MoveScrollPrev')
        self.MoveScrollUp = create_action_wrapper(app, 'MoveScrollUp')
        self.MoveSectionDown = create_action_wrapper(app, 'MoveSectionDown')
        self.MoveSectionUp = create_action_wrapper(app, 'MoveSectionUp')
        self.MoveSelDocBegin = create_action_wrapper(app, 'MoveSelDocBegin')
        self.MoveSelDocEnd = create_action_wrapper(app, 'MoveSelDocEnd')
        self.MoveSelDown = create_action_wrapper(app, 'MoveSelDown')
        self.MoveSelLeft = create_action_wrapper(app, 'MoveSelLeft')
        self.MoveSelLineBegin = create_action_wrapper(app, 'MoveSelLineBegin')
        self.MoveSelLineDown = create_action_wrapper(app, 'MoveSelLineDown')
        self.MoveSelLineEnd = create_action_wrapper(app, 'MoveSelLineEnd')
        self.MoveSelLineUp = create_action_wrapper(app, 'MoveSelLineUp')
        self.MoveSelListBegin = create_action_wrapper(app, 'MoveSelListBegin')
        self.MoveSelListEnd = create_action_wrapper(app, 'MoveSelListEnd')
        self.MoveSelNextChar = create_action_wrapper(app, 'MoveSelNextChar')
        self.MoveSelNextParaBegin = create_action_wrapper(app, 'MoveSelNextParaBegin')
        self.MoveSelNextPos = create_action_wrapper(app, 'MoveSelNextPos')
        self.MoveSelNextWord = create_action_wrapper(app, 'MoveSelNextWord')
        self.MoveSelPageDown = create_action_wrapper(app, 'MoveSelPageDown')
        self.MoveSelPageUp = create_action_wrapper(app, 'MoveSelPageUp')
        self.MoveSelParaBegin = create_action_wrapper(app, 'MoveSelParaBegin')
        self.MoveSelParaEnd = create_action_wrapper(app, 'MoveSelParaEnd')
        self.MoveSelPrevChar = create_action_wrapper(app, 'MoveSelPrevChar')
        self.MoveSelPrevParaBegin = create_action_wrapper(app, 'MoveSelPrevParaBegin')
        self.MoveSelPrevParaEnd = create_action_wrapper(app, 'MoveSelPrevParaEnd')
        self.MoveSelPrevPos = create_action_wrapper(app, 'MoveSelPrevPos')
        self.MoveSelPrevWord = create_action_wrapper(app, 'MoveSelPrevWord')
        self.MoveSelRight = create_action_wrapper(app, 'MoveSelRight')
        self.MoveSelTopLevelBegin = create_action_wrapper(app, 'MoveSelTopLevelBegin')
        self.MoveSelTopLevelEnd = create_action_wrapper(app, 'MoveSelTopLevelEnd')
        self.MoveSelUp = create_action_wrapper(app, 'MoveSelUp')
        self.MoveSelViewDown = create_action_wrapper(app, 'MoveSelViewDown')
        self.MoveSelViewUp = create_action_wrapper(app, 'MoveSelViewUp')
        self.MoveSelWordBegin = create_action_wrapper(app, 'MoveSelWordBegin')
        self.MoveSelWordEnd = create_action_wrapper(app, 'MoveSelWordEnd')
        self.MoveTopLevelBegin = create_action_wrapper(app, 'MoveTopLevelBegin')
        self.MoveTopLevelEnd = create_action_wrapper(app, 'MoveTopLevelEnd')
        self.MoveTopLevelList = create_action_wrapper(app, 'MoveTopLevelList')
        self.MoveUp = create_action_wrapper(app, 'MoveUp')
        self.MoveViewBegin = create_action_wrapper(app, 'MoveViewBegin')
        self.MoveViewDown = create_action_wrapper(app, 'MoveViewDown')
        self.MoveViewEnd = create_action_wrapper(app, 'MoveViewEnd')
        self.MoveViewUp = create_action_wrapper(app, 'MoveViewUp')
        self.MoveWordBegin = create_action_wrapper(app, 'MoveWordBegin')
        self.MoveWordEnd = create_action_wrapper(app, 'MoveWordEnd')
        self.MPSectionToNext = create_action_wrapper(app, 'MPSectionToNext')
        self.MPSectionToPrevious = create_action_wrapper(app, 'MPSectionToPrevious')
        self.MultiColumn = create_action_wrapper(app, 'MultiColumn')
        self.NewNumber = create_action_wrapper(app, 'NewNumber')
        self.NewNumberModify = create_action_wrapper(app, 'NewNumberModify')
        self.NextTextBoxLinked = create_action_wrapper(app, 'NextTextBoxLinked')
        self.NoteDelete = create_action_wrapper(app, 'NoteDelete')
        self.NoteModify = create_action_wrapper(app, 'NoteModify')
        self.NoteNumProperty = create_action_wrapper(app, 'NoteNumProperty')
        self.NoteToNext = create_action_wrapper(app, 'NoteToNext')
        self.NoteToPrev = create_action_wrapper(app, 'NoteToPrev')
        self.OleCreateNew = create_action_wrapper(app, 'OleCreateNew')
        self.OutlineNumber = create_action_wrapper(app, 'OutlineNumber')
        self.PageBorder = create_action_wrapper(app, 'PageBorder')
        self.PageHiding = create_action_wrapper(app, 'PageHiding')
        self.PageHidingModify = create_action_wrapper(app, 'PageHidingModify')
        self.PageNumPos = create_action_wrapper(app, 'PageNumPos')
        self.PageNumPosModify = create_action_wrapper(app, 'PageNumPosModify')
        self.PageSetup = create_action_wrapper(app, 'PageSetup')
        self.ParagraphShape = create_action_wrapper(app, 'ParagraphShape')
        self.ParagraphShapeAlignCenter = create_action_wrapper(app, 'ParagraphShapeAlignCenter')
        self.ParagraphShapeAlignDistribute = create_action_wrapper(app, 'ParagraphShapeAlignDistribute')
        self.ParagraphShapeAlignDivision = create_action_wrapper(app, 'ParagraphShapeAlignDivision')
        self.ParagraphShapeAlignJustify = create_action_wrapper(app, 'ParagraphShapeAlignJustify')
        self.ParagraphShapeAlignLeft = create_action_wrapper(app, 'ParagraphShapeAlignLeft')
        self.ParagraphShapeAlignRight = create_action_wrapper(app, 'ParagraphShapeAlignRight')
        self.ParagraphShapeDecreaseLeftMargin = create_action_wrapper(app, 'ParagraphShapeDecreaseLeftMargin')
        self.ParagraphShapeDecreaseLineSpacing = create_action_wrapper(app, 'ParagraphShapeDecreaseLineSpacing')
        self.ParagraphShapeDecreaseMargin = create_action_wrapper(app, 'ParagraphShapeDecreaseMargin')
        self.ParagraphShapeDecreaseRightMargin = create_action_wrapper(app, 'ParagraphShapeDecreaseRightMargin')
        self.ParagraphShapeIncreaseLeftMargin = create_action_wrapper(app, 'ParagraphShapeIncreaseLeftMargin')
        self.ParagraphShapeIncreaseLineSpacing = create_action_wrapper(app, 'ParagraphShapeIncreaseLineSpacing')
        self.ParagraphShapeIncreaseMargin = create_action_wrapper(app, 'ParagraphShapeIncreaseMargin')
        self.ParagraphShapeIncreaseRightMargin = create_action_wrapper(app, 'ParagraphShapeIncreaseRightMargin')
        self.ParagraphShapeIndentAtCaret = create_action_wrapper(app, 'ParagraphShapeIndentAtCaret')
        self.ParagraphShapeIndentNegative = create_action_wrapper(app, 'ParagraphShapeIndentNegative')
        self.ParagraphShapeIndentPositive = create_action_wrapper(app, 'ParagraphShapeIndentPositive')
        self.ParagraphShapeProtect = create_action_wrapper(app, 'ParagraphShapeProtect')
        self.ParagraphShapeWithNext = create_action_wrapper(app, 'ParagraphShapeWithNext')
        self.ParaNumberBullet = create_action_wrapper(app, 'ParaNumberBullet')
        self.ParaNumberBulletLevelDown = create_action_wrapper(app, 'ParaNumberBulletLevelDown')
        self.ParaNumberBulletLevelUp = create_action_wrapper(app, 'ParaNumberBulletLevelUp')
        self.ParaShapeDialog = create_action_wrapper(app, 'ParaShapeDialog')
        self.Paste = create_action_wrapper(app, 'Paste')
        self.PastePage = create_action_wrapper(app, 'PastePage')
        self.PasteSpecial = create_action_wrapper(app, 'PasteSpecial')
        self.PictureEffect1 = create_action_wrapper(app, 'PictureEffect1')
        self.PictureEffect2 = create_action_wrapper(app, 'PictureEffect2')
        self.PictureEffect3 = create_action_wrapper(app, 'PictureEffect3')
        self.PictureEffect4 = create_action_wrapper(app, 'PictureEffect4')
        self.PictureEffect5 = create_action_wrapper(app, 'PictureEffect5')
        self.PictureEffect6 = create_action_wrapper(app, 'PictureEffect6')
        self.PictureEffect7 = create_action_wrapper(app, 'PictureEffect7')
        self.PictureEffect8 = create_action_wrapper(app, 'PictureEffect8')
        self.PictureInsertDialog = create_action_wrapper(app, 'PictureInsertDialog')
        self.PictureLinkedToEmbedded = create_action_wrapper(app, 'PictureLinkedToEmbedded')
        self.PictureSave = create_action_wrapper(app, 'PictureSave')
        self.PictureScissor = create_action_wrapper(app, 'PictureScissor')
        self.PictureToOriginal = create_action_wrapper(app, 'PictureToOriginal')
        self.Preference = create_action_wrapper(app, 'Preference')
        self.Presentation = create_action_wrapper(app, 'Presentation')
        self.PresentationSetup = create_action_wrapper(app, 'PresentationSetup')
        self.PrevTextBoxLinked = create_action_wrapper(app, 'PrevTextBoxLinked')
        self.Print = create_action_wrapper(app, 'Print')
        self.PrintToImage = create_action_wrapper(app, 'PrintToImage')
        self.PutBullet = create_action_wrapper(app, 'PutBullet')
        self.PutNewParaNumber = create_action_wrapper(app, 'PutNewParaNumber')
        self.PutOutlineNumber = create_action_wrapper(app, 'PutOutlineNumber')
        self.PutParaNumber = create_action_wrapper(app, 'PutParaNumber')
        self.QuickCorrect = create_action_wrapper(app, 'QuickCorrect')
        self.RecalcPageCount = create_action_wrapper(app, 'RecalcPageCount')
        self.RecentCode = create_action_wrapper(app, 'RecentCode')
        self.Redo = create_action_wrapper(app, 'Redo')
        self.RepeatFind = create_action_wrapper(app, 'RepeatFind')
        self.ReplaceDlg = create_action_wrapper(app, 'ReplaceDlg')
        self.ReturnKeyInField = create_action_wrapper(app, 'ReturnKeyInField')
        self.ReturnPrevPos = create_action_wrapper(app, 'ReturnPrevPos')
        self.ReverseFind = create_action_wrapper(app, 'ReverseFind')
        self.SaveBlockAction = create_action_wrapper(app, 'SaveBlockAction')
        self.SaveFootnote = create_action_wrapper(app, 'SaveFootnote')
        self.SaveHistoryItem = create_action_wrapper(app, 'SaveHistoryItem')
        self.ScrMacroDefine = create_action_wrapper(app, 'ScrMacroDefine')
        self.ScrMacroPause = create_action_wrapper(app, 'ScrMacroPause')
        self.ScrMacroRepeatDlg = create_action_wrapper(app, 'ScrMacroRepeatDlg')
        self.ScrMacroSecurityDlg = create_action_wrapper(app, 'ScrMacroSecurityDlg')
        self.ScrMacroStop = create_action_wrapper(app, 'ScrMacroStop')
        self.SearchAddress = create_action_wrapper(app, 'SearchAddress')
        self.SearchForeign = create_action_wrapper(app, 'SearchForeign')
        self.Select = create_action_wrapper(app, 'Select')
        self.SelectAll = create_action_wrapper(app, 'SelectAll')
        self.SelectColumn = create_action_wrapper(app, 'SelectColumn')
        self.SelectCtrlFront = create_action_wrapper(app, 'SelectCtrlFront')
        self.SelectCtrlReverse = create_action_wrapper(app, 'SelectCtrlReverse')
        self.SendBrowserText = create_action_wrapper(app, 'SendBrowserText')
        self.SendMailAttach = create_action_wrapper(app, 'SendMailAttach')
        self.SendMailText = create_action_wrapper(app, 'SendMailText')
        self.ShapeCopyPaste = create_action_wrapper(app, 'ShapeCopyPaste')
        self.ShapeObjAlignBottom = create_action_wrapper(app, 'ShapeObjAlignBottom')
        self.ShapeObjAlignCenter = create_action_wrapper(app, 'ShapeObjAlignCenter')
        self.ShapeObjAlignHeight = create_action_wrapper(app, 'ShapeObjAlignHeight')
        self.ShapeObjAlignHorzSpacing = create_action_wrapper(app, 'ShapeObjAlignHorzSpacing')
        self.ShapeObjAlignLeft = create_action_wrapper(app, 'ShapeObjAlignLeft')
        self.ShapeObjAlignMiddle = create_action_wrapper(app, 'ShapeObjAlignMiddle')
        self.ShapeObjAlignRight = create_action_wrapper(app, 'ShapeObjAlignRight')
        self.ShapeObjAlignSize = create_action_wrapper(app, 'ShapeObjAlignSize')
        self.ShapeObjAlignTop = create_action_wrapper(app, 'ShapeObjAlignTop')
        self.ShapeObjAlignVertSpacing = create_action_wrapper(app, 'ShapeObjAlignVertSpacing')
        self.ShapeObjAlignWidth = create_action_wrapper(app, 'ShapeObjAlignWidth')
        self.ShapeObjAttachCaption = create_action_wrapper(app, 'ShapeObjAttachCaption')
        self.ShapeObjAttachTextBox = create_action_wrapper(app, 'ShapeObjAttachTextBox')
        self.ShapeObjAttrDialog = create_action_wrapper(app, 'ShapeObjAttrDialog')
        self.ShapeObjBringForward = create_action_wrapper(app, 'ShapeObjBringForward')
        self.ShapeObjBringInFrontOfText = create_action_wrapper(app, 'ShapeObjBringInFrontOfText')
        self.ShapeObjBringToFront = create_action_wrapper(app, 'ShapeObjBringToFront')
        self.ShapeObjCtrlSendBehindText = create_action_wrapper(app, 'ShapeObjCtrlSendBehindText')
        self.ShapeObjDetachCaption = create_action_wrapper(app, 'ShapeObjDetachCaption')
        self.ShapeObjDetachTextBox = create_action_wrapper(app, 'ShapeObjDetachTextBox')
        self.ShapeObjDialog = create_action_wrapper(app, 'ShapeObjDialog')
        self.ShapeObjectCopy = create_action_wrapper(app, 'ShapeObjectCopy')
        self.ShapeObjectPaste = create_action_wrapper(app, 'ShapeObjectPaste')
        self.ShapeObjFillProperty = create_action_wrapper(app, 'ShapeObjFillProperty')
        self.ShapeObjGroup = create_action_wrapper(app, 'ShapeObjGroup')
        self.ShapeObjHorzFlip = create_action_wrapper(app, 'ShapeObjHorzFlip')
        self.ShapeObjHorzFlipOrgState = create_action_wrapper(app, 'ShapeObjHorzFlipOrgState')
        self.ShapeObjInsertCaptionNum = create_action_wrapper(app, 'ShapeObjInsertCaptionNum')
        self.ShapeObjLineProperty = create_action_wrapper(app, 'ShapeObjLineProperty')
        self.ShapeObjLock = create_action_wrapper(app, 'ShapeObjLock')
        self.ShapeObjMoveDown = create_action_wrapper(app, 'ShapeObjMoveDown')
        self.ShapeObjMoveLeft = create_action_wrapper(app, 'ShapeObjMoveLeft')
        self.ShapeObjMoveRight = create_action_wrapper(app, 'ShapeObjMoveRight')
        self.ShapeObjMoveUp = create_action_wrapper(app, 'ShapeObjMoveUp')
        self.ShapeObjNextObject = create_action_wrapper(app, 'ShapeObjNextObject')
        self.ShapeObjNorm = create_action_wrapper(app, 'ShapeObjNorm')
        self.ShapeObjPrevObject = create_action_wrapper(app, 'ShapeObjPrevObject')
        self.ShapeObjRandomAngleRotater = create_action_wrapper(app, 'ShapeObjRandomAngleRotater')
        self.ShapeObjResizeDown = create_action_wrapper(app, 'ShapeObjResizeDown')
        self.ShapeObjResizeLeft = create_action_wrapper(app, 'ShapeObjResizeLeft')
        self.ShapeObjResizeRight = create_action_wrapper(app, 'ShapeObjResizeRight')
        self.ShapeObjResizeUp = create_action_wrapper(app, 'ShapeObjResizeUp')
        self.ShapeObjRightAngleRotater = create_action_wrapper(app, 'ShapeObjRightAngleRotater')
        self.ShapeObjRightAngleRotaterAnticlockwise = create_action_wrapper(app, 'ShapeObjRightAngleRotaterAnticlockwise')
        self.ShapeObjRotater = create_action_wrapper(app, 'ShapeObjRotater')
        self.ShapeObjSaveAsPicture = create_action_wrapper(app, 'ShapeObjSaveAsPicture')
        self.ShapeObjSelect = create_action_wrapper(app, 'ShapeObjSelect')
        self.ShapeObjSendBack = create_action_wrapper(app, 'ShapeObjSendBack')
        self.ShapeObjSendToBack = create_action_wrapper(app, 'ShapeObjSendToBack')
        self.ShapeObjShadowEnlarge = create_action_wrapper(app, 'ShapeObjShadowEnlarge')
        self.ShapeObjShadowMoveDown = create_action_wrapper(app, 'ShapeObjShadowMoveDown')
        self.ShapeObjShadowMoveLeft = create_action_wrapper(app, 'ShapeObjShadowMoveLeft')
        self.ShapeObjShadowMoveRight = create_action_wrapper(app, 'ShapeObjShadowMoveRight')
        self.ShapeObjShadowMoveUp = create_action_wrapper(app, 'ShapeObjShadowMoveUp')
        self.ShapeObjShadowNarrow = create_action_wrapper(app, 'ShapeObjShadowNarrow')
        self.ShapeObjShadowParellelLeftBottom = create_action_wrapper(app, 'ShapeObjShadowParellelLeftBottom')
        self.ShapeObjShadowParellelLeftTop = create_action_wrapper(app, 'ShapeObjShadowParellelLeftTop')
        self.ShapeObjShadowParellelRightBottom = create_action_wrapper(app, 'ShapeObjShadowParellelRightBottom')
        self.ShapeObjShadowParellelRightTop = create_action_wrapper(app, 'ShapeObjShadowParellelRightTop')
        self.ShapeObjShadowShearLeftBottom = create_action_wrapper(app, 'ShapeObjShadowShearLeftBottom')
        self.ShapeObjShadowShearLeftTop = create_action_wrapper(app, 'ShapeObjShadowShearLeftTop')
        self.ShapeObjShadowShearRightBottom = create_action_wrapper(app, 'ShapeObjShadowShearRightBottom')
        self.ShapeObjShadowShearRightTop = create_action_wrapper(app, 'ShapeObjShadowShearRightTop')
        self.ShapeObjShear = create_action_wrapper(app, 'ShapeObjShear')
        self.ShapeObjTableSelCell = create_action_wrapper(app, 'ShapeObjTableSelCell')
        self.ShapeObjTextBoxEdit = create_action_wrapper(app, 'ShapeObjTextBoxEdit')
        self.ShapeObjUngroup = create_action_wrapper(app, 'ShapeObjUngroup')
        self.ShapeObjUnlockAll = create_action_wrapper(app, 'ShapeObjUnlockAll')
        self.ShapeObjVertFlip = create_action_wrapper(app, 'ShapeObjVertFlip')
        self.ShapeObjVertFlipOrgState = create_action_wrapper(app, 'ShapeObjVertFlipOrgState')
        self.ShapeObjWrapSquare = create_action_wrapper(app, 'ShapeObjWrapSquare')
        self.ShapeObjWrapTopAndBottom = create_action_wrapper(app, 'ShapeObjWrapTopAndBottom')
        self.Sort = create_action_wrapper(app, 'Sort')
        self.SpellingCheck = create_action_wrapper(app, 'SpellingCheck')
        self.SplitMemoOpen = create_action_wrapper(app, 'SplitMemoOpen')
        self.Style = create_action_wrapper(app, 'Style')
        self.StyleAdd = create_action_wrapper(app, 'StyleAdd')
        self.StyleClearCharStyle = create_action_wrapper(app, 'StyleClearCharStyle')
        self.StyleDelete = create_action_wrapper(app, 'StyleDelete')
        self.StyleEdit = create_action_wrapper(app, 'StyleEdit')
        self.StyleEx = create_action_wrapper(app, 'StyleEx')
        self.StyleParaNumberBullet = create_action_wrapper(app, 'StyleParaNumberBullet')
        self.StyleShortcut1 = create_action_wrapper(app, 'StyleShortcut1')
        self.StyleShortcut10 = create_action_wrapper(app, 'StyleShortcut10')
        self.StyleShortcut2 = create_action_wrapper(app, 'StyleShortcut2')
        self.StyleShortcut3 = create_action_wrapper(app, 'StyleShortcut3')
        self.StyleShortcut4 = create_action_wrapper(app, 'StyleShortcut4')
        self.StyleShortcut5 = create_action_wrapper(app, 'StyleShortcut5')
        self.StyleShortcut6 = create_action_wrapper(app, 'StyleShortcut6')
        self.StyleShortcut7 = create_action_wrapper(app, 'StyleShortcut7')
        self.StyleShortcut8 = create_action_wrapper(app, 'StyleShortcut8')
        self.StyleShortcut9 = create_action_wrapper(app, 'StyleShortcut9')
        self.StyleTemplate = create_action_wrapper(app, 'StyleTemplate')
        self.Sum = create_action_wrapper(app, 'Sum')
        self.TableAppendRow = create_action_wrapper(app, 'TableAppendRow')
        self.TableAutoDrawPenStyleWidthDlg = create_action_wrapper(app, 'TableAutoDrawPenStyleWidthDlg')
        self.TableAutoFill = create_action_wrapper(app, 'TableAutoFill')
        self.TableAutoFillDlg = create_action_wrapper(app, 'TableAutoFillDlg')
        self.TableCellBlock = create_action_wrapper(app, 'TableCellBlock')
        self.TableCellBlockCol = create_action_wrapper(app, 'TableCellBlockCol')
        self.TableCellBlockExtend = create_action_wrapper(app, 'TableCellBlockExtend')
        self.TableCellBlockExtendAbs = create_action_wrapper(app, 'TableCellBlockExtendAbs')
        self.TableCellBlockRow = create_action_wrapper(app, 'TableCellBlockRow')
        self.TableCellBorderAll = create_action_wrapper(app, 'TableCellBorderAll')
        self.TableCellBorderBottom = create_action_wrapper(app, 'TableCellBorderBottom')
        self.TableCellBorderDiagonalDown = create_action_wrapper(app, 'TableCellBorderDiagonalDown')
        self.TableCellBorderDiagonalUp = create_action_wrapper(app, 'TableCellBorderDiagonalUp')
        self.TableCellBorderInside = create_action_wrapper(app, 'TableCellBorderInside')
        self.TableCellBorderInsideHorz = create_action_wrapper(app, 'TableCellBorderInsideHorz')
        self.TableCellBorderInsideVert = create_action_wrapper(app, 'TableCellBorderInsideVert')
        self.TableCellBorderLeft = create_action_wrapper(app, 'TableCellBorderLeft')
        self.TableCellBorderNo = create_action_wrapper(app, 'TableCellBorderNo')
        self.TableCellBorderOutside = create_action_wrapper(app, 'TableCellBorderOutside')
        self.TableCellBorderRight = create_action_wrapper(app, 'TableCellBorderRight')
        self.TableCellBorderTop = create_action_wrapper(app, 'TableCellBorderTop')
        self.TableCellShadeDec = create_action_wrapper(app, 'TableCellShadeDec')
        self.TableCellShadeInc = create_action_wrapper(app, 'TableCellShadeInc')
        self.TableColBegin = create_action_wrapper(app, 'TableColBegin')
        self.TableColEnd = create_action_wrapper(app, 'TableColEnd')
        self.TableColPageDown = create_action_wrapper(app, 'TableColPageDown')
        self.TableColPageUp = create_action_wrapper(app, 'TableColPageUp')
        self.TableCreate = create_action_wrapper(app, 'TableCreate')
        self.TableDeleteCell = create_action_wrapper(app, 'TableDeleteCell')
        self.TableDeleteColumn = create_action_wrapper(app, 'TableDeleteColumn')
        self.TableDeleteRow = create_action_wrapper(app, 'TableDeleteRow')
        self.TableDeleteRowColumn = create_action_wrapper(app, 'TableDeleteRowColumn')
        self.TableDistributeCellHeight = create_action_wrapper(app, 'TableDistributeCellHeight')
        self.TableDistributeCellWidth = create_action_wrapper(app, 'TableDistributeCellWidth')
        self.TableDrawPen = create_action_wrapper(app, 'TableDrawPen')
        self.TableEraser = create_action_wrapper(app, 'TableEraser')
        self.TableFormula = create_action_wrapper(app, 'TableFormula')
        self.TableFormulaAvgAuto = create_action_wrapper(app, 'TableFormulaAvgAuto')
        self.TableFormulaAvgHor = create_action_wrapper(app, 'TableFormulaAvgHor')
        self.TableFormulaAvgVer = create_action_wrapper(app, 'TableFormulaAvgVer')
        self.TableFormulaProAuto = create_action_wrapper(app, 'TableFormulaProAuto')
        self.TableFormulaProHor = create_action_wrapper(app, 'TableFormulaProHor')
        self.TableFormulaProVer = create_action_wrapper(app, 'TableFormulaProVer')
        self.TableFormulaSumAuto = create_action_wrapper(app, 'TableFormulaSumAuto')
        self.TableFormulaSumHor = create_action_wrapper(app, 'TableFormulaSumHor')
        self.TableFormulaSumVer = create_action_wrapper(app, 'TableFormulaSumVer')
        self.TableInsertLeftColumn = create_action_wrapper(app, 'TableInsertLeftColumn')
        self.TableInsertLowerRow = create_action_wrapper(app, 'TableInsertLowerRow')
        self.TableInsertRightColumn = create_action_wrapper(app, 'TableInsertRightColumn')
        self.TableInsertRowColumn = create_action_wrapper(app, 'TableInsertRowColumn')
        self.TableInsertUpperRow = create_action_wrapper(app, 'TableInsertUpperRow')
        self.TableLeftCell = create_action_wrapper(app, 'TableLeftCell')
        self.TableLowerCell = create_action_wrapper(app, 'TableLowerCell')
        self.TableMergeCell = create_action_wrapper(app, 'TableMergeCell')
        self.TableMergeTable = create_action_wrapper(app, 'TableMergeTable')
        self.TablePropertyDialog = create_action_wrapper(app, 'TablePropertyDialog')
        self.TableResizeCellDown = create_action_wrapper(app, 'TableResizeCellDown')
        self.TableResizeCellLeft = create_action_wrapper(app, 'TableResizeCellLeft')
        self.TableResizeCellRight = create_action_wrapper(app, 'TableResizeCellRight')
        self.TableResizeCellUp = create_action_wrapper(app, 'TableResizeCellUp')
        self.TableResizeDown = create_action_wrapper(app, 'TableResizeDown')
        self.TableResizeExDown = create_action_wrapper(app, 'TableResizeExDown')
        self.TableResizeExLeft = create_action_wrapper(app, 'TableResizeExLeft')
        self.TableResizeExRight = create_action_wrapper(app, 'TableResizeExRight')
        self.TableResizeExUp = create_action_wrapper(app, 'TableResizeExUp')
        self.TableResizeLeft = create_action_wrapper(app, 'TableResizeLeft')
        self.TableResizeLineDown = create_action_wrapper(app, 'TableResizeLineDown')
        self.TableResizeLineLeft = create_action_wrapper(app, 'TableResizeLineLeft')
        self.TableResizeLineRight = create_action_wrapper(app, 'TableResizeLineRight')
        self.TableResizeLineUp = create_action_wrapper(app, 'TableResizeLineUp')
        self.TableResizeRight = create_action_wrapper(app, 'TableResizeRight')
        self.TableResizeUp = create_action_wrapper(app, 'TableResizeUp')
        self.TableRightCell = create_action_wrapper(app, 'TableRightCell')
        self.TableRightCellAppend = create_action_wrapper(app, 'TableRightCellAppend')
        self.TableSplitCell = create_action_wrapper(app, 'TableSplitCell')
        self.TableSplitCellCol2 = create_action_wrapper(app, 'TableSplitCellCol2')
        self.TableSplitCellRow2 = create_action_wrapper(app, 'TableSplitCellRow2')
        self.TableSplitTable = create_action_wrapper(app, 'TableSplitTable')
        self.TableStringToTable = create_action_wrapper(app, 'TableStringToTable')
        self.TableSubtractRow = create_action_wrapper(app, 'TableSubtractRow')
        self.TableSwap = create_action_wrapper(app, 'TableSwap')
        self.TableTableToString = create_action_wrapper(app, 'TableTableToString')
        self.TableTemplate = create_action_wrapper(app, 'TableTemplate')
        self.TableUpperCell = create_action_wrapper(app, 'TableUpperCell')
        self.TableVAlignBottom = create_action_wrapper(app, 'TableVAlignBottom')
        self.TableVAlignCenter = create_action_wrapper(app, 'TableVAlignCenter')
        self.TableVAlignTop = create_action_wrapper(app, 'TableVAlignTop')
        self.TextArtCreate = create_action_wrapper(app, 'TextArtCreate')
        self.TextArtModify = create_action_wrapper(app, 'TextArtModify')
        self.TextArtShadow = create_action_wrapper(app, 'TextArtShadow')
        self.ToggleOverwrite = create_action_wrapper(app, 'ToggleOverwrite')
        self.Undo = create_action_wrapper(app, 'Undo')
        self.UnlinkTextBox = create_action_wrapper(app, 'UnlinkTextBox')
        self.UserAutoFill = create_action_wrapper(app, 'UserAutoFill')
        self.VersionDelete = create_action_wrapper(app, 'VersionDelete')
        self.VersionDeleteAll = create_action_wrapper(app, 'VersionDeleteAll')
        self.VersionInfo = create_action_wrapper(app, 'VersionInfo')
        self.VersionSave = create_action_wrapper(app, 'VersionSave')
        self.VerticalText = create_action_wrapper(app, 'VerticalText')
        self.ViewGridOption = create_action_wrapper(app, 'ViewGridOption')
        self.ViewIdiom = create_action_wrapper(app, 'ViewIdiom')
        self.ViewOptionCtrlMark = create_action_wrapper(app, 'ViewOptionCtrlMark')
        self.ViewOptionGuideLine = create_action_wrapper(app, 'ViewOptionGuideLine')
        self.ViewOptionMemo = create_action_wrapper(app, 'ViewOptionMemo')
        self.ViewOptionMemoGuideline = create_action_wrapper(app, 'ViewOptionMemoGuideline')
        self.ViewOptionPaper = create_action_wrapper(app, 'ViewOptionPaper')
        self.ViewOptionParaMark = create_action_wrapper(app, 'ViewOptionParaMark')
        self.ViewOptionPicture = create_action_wrapper(app, 'ViewOptionPicture')
        self.ViewOptionRevision = create_action_wrapper(app, 'ViewOptionRevision')
        self.ViewShowGrid = create_action_wrapper(app, 'ViewShowGrid')
        self.ViewZoom = create_action_wrapper(app, 'ViewZoom')
        self.ViewZoomFitPage = create_action_wrapper(app, 'ViewZoomFitPage')
        self.ViewZoomFitWidth = create_action_wrapper(app, 'ViewZoomFitWidth')
        self.ViewZoomNormal = create_action_wrapper(app, 'ViewZoomNormal')
        self.VoiceCommand = create_action_wrapper(app, 'VoiceCommand')
        

        
    
    
    
